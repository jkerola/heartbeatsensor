|harkka2018
pin_name1 <= uart:inst11.TX
clk => freq_gen:inst5.clock
clk => freq_counter:inst.clock
clk => lpm_counter0:inst9.clock
clk => rotary_encoder:inst4.enable
clk => lpm_counter1:inst16.clock
hex0[0] <= display_select_control:inst6.hex0[0]
hex0[1] <= display_select_control:inst6.hex0[1]
hex0[2] <= display_select_control:inst6.hex0[2]
hex0[3] <= display_select_control:inst6.hex0[3]
hex0[4] <= display_select_control:inst6.hex0[4]
hex0[5] <= display_select_control:inst6.hex0[5]
hex0[6] <= display_select_control:inst6.hex0[6]
rota1 => input_sync:inst12.input
rota0 => input_sync:inst10.input
button => input_sync:inst2.input
hex1[0] <= display_select_control:inst6.hex1[0]
hex1[1] <= display_select_control:inst6.hex1[1]
hex1[2] <= display_select_control:inst6.hex1[2]
hex1[3] <= display_select_control:inst6.hex1[3]
hex1[4] <= display_select_control:inst6.hex1[4]
hex1[5] <= display_select_control:inst6.hex1[5]
hex1[6] <= display_select_control:inst6.hex1[6]
hex2[0] <= display_select_control:inst6.hex2[0]
hex2[1] <= display_select_control:inst6.hex2[1]
hex2[2] <= display_select_control:inst6.hex2[2]
hex2[3] <= display_select_control:inst6.hex2[3]
hex2[4] <= display_select_control:inst6.hex2[4]
hex2[5] <= display_select_control:inst6.hex2[5]
hex2[6] <= display_select_control:inst6.hex2[6]
hex3[0] <= display_select_control:inst6.hex3[0]
hex3[1] <= display_select_control:inst6.hex3[1]
hex3[2] <= display_select_control:inst6.hex3[2]
hex3[3] <= display_select_control:inst6.hex3[3]
hex3[4] <= display_select_control:inst6.hex3[4]
hex3[5] <= display_select_control:inst6.hex3[5]
hex3[6] <= display_select_control:inst6.hex3[6]
ledG[0] <= <GND>
ledG[1] <= <GND>
ledG[2] <= <GND>
ledG[3] <= input_sync:inst2.sync_rising_edge
ledR[0] <= <GND>
ledR[1] <= <GND>
ledR[2] <= <GND>
ledR[3] <= <GND>
rstn => ~NO_FANOUT~
freq_in => ~NO_FANOUT~


|harkka2018|uart:inst11
TX <= inst26.DB_MAX_OUTPUT_PORT_TYPE
clk => inst26.CLK
clk => lpm_counter3:inst21.clock
clk => lpm_counter2:inst13.clock
clk => tx_state_machine:inst18.clk
clk => piso8:inst29.clk
in => tx_state_machine:inst18.DR
in => piso8:inst29.LDEN[0]
piso[0] => piso8:inst29.d[0]
piso[1] => piso8:inst29.d[1]
piso[2] => piso8:inst29.d[2]
piso[3] => piso8:inst29.d[3]
piso[4] => piso8:inst29.d[4]
piso[5] => piso8:inst29.d[5]
piso[6] => piso8:inst29.d[6]
piso[7] => piso8:inst29.d[7]
LOADPISO <= inst28.DB_MAX_OUTPUT_PORT_TYPE


|harkka2018|uart:inst11|74153M:inst23
Y <= 9.DB_MAX_OUTPUT_PORT_TYPE
GN => 26.IN0
B => 27.IN0
A => 29.IN0
C0 => 1.IN3
C1 => 2.IN3
C2 => 3.IN3
C3 => 4.IN3


|harkka2018|uart:inst11|tx_state_machine:inst18
rst_bit_ctr <= inst3.DB_MAX_OUTPUT_PORT_TYPE
state[0] <= inst1.DB_MAX_OUTPUT_PORT_TYPE
state[1] <= inst.DB_MAX_OUTPUT_PORT_TYPE
clk => inst.CLK
clk => inst1.CLK
BD => 74153:inst22.1C1
BD => inst2.IN0
BD => inst11.IN0
DR => 74153:inst22.2C0
BC => inst2.IN1
enable_PISO <= inst4.DB_MAX_OUTPUT_PORT_TYPE


|harkka2018|uart:inst11|tx_state_machine:inst18|74153:inst22
1Y <= 9.DB_MAX_OUTPUT_PORT_TYPE
1GN => 26.IN0
B => 27.IN0
A => 29.IN0
1C0 => 1.IN3
1C1 => 2.IN3
1C2 => 3.IN3
1C3 => 4.IN3
2Y <= 10.DB_MAX_OUTPUT_PORT_TYPE
2C0 => 5.IN0
2GN => 25.IN0
2C1 => 6.IN0
2C2 => 7.IN0
2C3 => 8.IN0


|harkka2018|uart:inst11|lpm_counter3:inst21
clock => lpm_counter:LPM_COUNTER_component.clock
sclr => lpm_counter:LPM_COUNTER_component.sclr
cout <= lpm_counter:LPM_COUNTER_component.cout
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]
q[3] <= lpm_counter:LPM_COUNTER_component.q[3]
q[4] <= lpm_counter:LPM_COUNTER_component.q[4]
q[5] <= lpm_counter:LPM_COUNTER_component.q[5]
q[6] <= lpm_counter:LPM_COUNTER_component.q[6]
q[7] <= lpm_counter:LPM_COUNTER_component.q[7]
q[8] <= lpm_counter:LPM_COUNTER_component.q[8]
q[9] <= lpm_counter:LPM_COUNTER_component.q[9]
q[10] <= lpm_counter:LPM_COUNTER_component.q[10]
q[11] <= lpm_counter:LPM_COUNTER_component.q[11]
q[12] <= lpm_counter:LPM_COUNTER_component.q[12]


|harkka2018|uart:inst11|lpm_counter3:inst21|lpm_counter:LPM_COUNTER_component
clock => cntr_k2k:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => cntr_k2k:auto_generated.sclr
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
data[6] => ~NO_FANOUT~
data[7] => ~NO_FANOUT~
data[8] => ~NO_FANOUT~
data[9] => ~NO_FANOUT~
data[10] => ~NO_FANOUT~
data[11] => ~NO_FANOUT~
data[12] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_k2k:auto_generated.q[0]
q[1] <= cntr_k2k:auto_generated.q[1]
q[2] <= cntr_k2k:auto_generated.q[2]
q[3] <= cntr_k2k:auto_generated.q[3]
q[4] <= cntr_k2k:auto_generated.q[4]
q[5] <= cntr_k2k:auto_generated.q[5]
q[6] <= cntr_k2k:auto_generated.q[6]
q[7] <= cntr_k2k:auto_generated.q[7]
q[8] <= cntr_k2k:auto_generated.q[8]
q[9] <= cntr_k2k:auto_generated.q[9]
q[10] <= cntr_k2k:auto_generated.q[10]
q[11] <= cntr_k2k:auto_generated.q[11]
q[12] <= cntr_k2k:auto_generated.q[12]
cout <= cntr_k2k:auto_generated.cout
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|harkka2018|uart:inst11|lpm_counter3:inst21|lpm_counter:LPM_COUNTER_component|cntr_k2k:auto_generated
clock => counter_reg_bit1a[12].CLK
clock => counter_reg_bit1a[11].CLK
clock => counter_reg_bit1a[10].CLK
clock => counter_reg_bit1a[9].CLK
clock => counter_reg_bit1a[8].CLK
clock => counter_reg_bit1a[7].CLK
clock => counter_reg_bit1a[6].CLK
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cout <= cout_actual.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT
q[6] <= counter_reg_bit1a[6].REGOUT
q[7] <= counter_reg_bit1a[7].REGOUT
q[8] <= counter_reg_bit1a[8].REGOUT
q[9] <= counter_reg_bit1a[9].REGOUT
q[10] <= counter_reg_bit1a[10].REGOUT
q[11] <= counter_reg_bit1a[11].REGOUT
q[12] <= counter_reg_bit1a[12].REGOUT
sclr => _.IN0
sclr => _.IN0
sclr => _.IN0


|harkka2018|uart:inst11|lpm_counter3:inst21|lpm_counter:LPM_COUNTER_component|cntr_k2k:auto_generated|cmpr_odc:cmpr2
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[2].IN0
dataa[1] => data_wire[2].IN0
dataa[2] => data_wire[3].IN0
dataa[3] => data_wire[3].IN0
dataa[4] => data_wire[4].IN0
dataa[5] => data_wire[4].IN0
dataa[6] => data_wire[5].IN0
dataa[7] => data_wire[5].IN0
dataa[8] => data_wire[6].IN0
dataa[9] => data_wire[6].IN0
dataa[10] => data_wire[7].IN0
dataa[11] => data_wire[7].IN0
dataa[12] => data_wire[8].IN0
datab[0] => data_wire[2].IN1
datab[1] => data_wire[2].IN1
datab[2] => data_wire[3].IN1
datab[3] => data_wire[3].IN1
datab[4] => data_wire[4].IN1
datab[5] => data_wire[4].IN1
datab[6] => data_wire[5].IN1
datab[7] => data_wire[5].IN1
datab[8] => data_wire[6].IN1
datab[9] => data_wire[6].IN1
datab[10] => data_wire[7].IN1
datab[11] => data_wire[7].IN1
datab[12] => data_wire[8].IN1


|harkka2018|uart:inst11|lpm_counter2:inst13
aclr => lpm_counter:LPM_COUNTER_component.aclr
clock => lpm_counter:LPM_COUNTER_component.clock
cnt_en => lpm_counter:LPM_COUNTER_component.cnt_en
sclr => lpm_counter:LPM_COUNTER_component.sclr
cout <= lpm_counter:LPM_COUNTER_component.cout
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]
q[3] <= lpm_counter:LPM_COUNTER_component.q[3]
q[4] <= lpm_counter:LPM_COUNTER_component.q[4]
q[5] <= lpm_counter:LPM_COUNTER_component.q[5]
q[6] <= lpm_counter:LPM_COUNTER_component.q[6]
q[7] <= lpm_counter:LPM_COUNTER_component.q[7]


|harkka2018|uart:inst11|lpm_counter2:inst13|lpm_counter:LPM_COUNTER_component
clock => cntr_42l:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_42l:auto_generated.cnt_en
updown => ~NO_FANOUT~
aclr => cntr_42l:auto_generated.aclr
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => cntr_42l:auto_generated.sclr
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
data[6] => ~NO_FANOUT~
data[7] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_42l:auto_generated.q[0]
q[1] <= cntr_42l:auto_generated.q[1]
q[2] <= cntr_42l:auto_generated.q[2]
q[3] <= cntr_42l:auto_generated.q[3]
q[4] <= cntr_42l:auto_generated.q[4]
q[5] <= cntr_42l:auto_generated.q[5]
q[6] <= cntr_42l:auto_generated.q[6]
q[7] <= cntr_42l:auto_generated.q[7]
cout <= cntr_42l:auto_generated.cout
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|harkka2018|uart:inst11|lpm_counter2:inst13|lpm_counter:LPM_COUNTER_component|cntr_42l:auto_generated
aclr => counter_reg_bit1a[7].ACLR
aclr => counter_reg_bit1a[6].ACLR
aclr => counter_reg_bit1a[5].ACLR
aclr => counter_reg_bit1a[4].ACLR
aclr => counter_reg_bit1a[3].ACLR
aclr => counter_reg_bit1a[2].ACLR
aclr => counter_reg_bit1a[1].ACLR
aclr => counter_reg_bit1a[0].ACLR
clock => counter_reg_bit1a[7].CLK
clock => counter_reg_bit1a[6].CLK
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cnt_en => _.IN1
cout <= cout_actual.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT
q[6] <= counter_reg_bit1a[6].REGOUT
q[7] <= counter_reg_bit1a[7].REGOUT
sclr => _.IN0
sclr => _.IN0
sclr => _.IN0


|harkka2018|uart:inst11|lpm_counter2:inst13|lpm_counter:LPM_COUNTER_component|cntr_42l:auto_generated|cmpr_ccc:cmpr2
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[0].IN0
dataa[1] => data_wire[0].IN0
dataa[2] => data_wire[1].IN0
dataa[3] => data_wire[1].IN0
dataa[4] => data_wire[2].IN0
dataa[5] => data_wire[2].IN0
dataa[6] => data_wire[3].IN0
dataa[7] => data_wire[3].IN0
datab[0] => data_wire[0].IN1
datab[1] => data_wire[0].IN1
datab[2] => data_wire[1].IN1
datab[3] => data_wire[1].IN1
datab[4] => data_wire[2].IN1
datab[5] => data_wire[2].IN1
datab[6] => data_wire[3].IN1
datab[7] => data_wire[3].IN1


|harkka2018|uart:inst11|piso8:inst29
SO <= inst14.DB_MAX_OUTPUT_PORT_TYPE
clk => inst14.CLK
clk => inst12.CLK
clk => inst10.CLK
clk => inst8.CLK
clk => inst6.CLK
clk => inst4.CLK
clk => inst2.CLK
clk => inst.CLK
SI => lpm_mux0:inst1.data2
d[0] => lpm_mux0:inst15.data1
d[1] => lpm_mux0:inst13.data1
d[2] => lpm_mux0:inst11.data1
d[3] => lpm_mux0:inst9.data1
d[4] => lpm_mux0:inst7.data1
d[5] => lpm_mux0:inst5.data1
d[6] => lpm_mux0:inst3.data1
d[7] => lpm_mux0:inst1.data1
LDEN[0] => lpm_mux0:inst1.sel[0]
LDEN[0] => lpm_mux0:inst3.sel[0]
LDEN[0] => lpm_mux0:inst5.sel[0]
LDEN[0] => lpm_mux0:inst7.sel[0]
LDEN[0] => lpm_mux0:inst9.sel[0]
LDEN[0] => lpm_mux0:inst11.sel[0]
LDEN[0] => lpm_mux0:inst13.sel[0]
LDEN[0] => lpm_mux0:inst15.sel[0]
LDEN[1] => lpm_mux0:inst1.sel[1]
LDEN[1] => lpm_mux0:inst3.sel[1]
LDEN[1] => lpm_mux0:inst5.sel[1]
LDEN[1] => lpm_mux0:inst7.sel[1]
LDEN[1] => lpm_mux0:inst9.sel[1]
LDEN[1] => lpm_mux0:inst11.sel[1]
LDEN[1] => lpm_mux0:inst13.sel[1]
LDEN[1] => lpm_mux0:inst15.sel[1]


|harkka2018|uart:inst11|piso8:inst29|lpm_mux0:inst15
data0 => LPM_MUX:LPM_MUX_component.DATA[0][0]
data1 => LPM_MUX:LPM_MUX_component.DATA[1][0]
data2 => LPM_MUX:LPM_MUX_component.DATA[2][0]
sel[0] => LPM_MUX:LPM_MUX_component.SEL[0]
sel[1] => LPM_MUX:LPM_MUX_component.SEL[1]
result <= LPM_MUX:LPM_MUX_component.RESULT[0]


|harkka2018|uart:inst11|piso8:inst29|lpm_mux0:inst15|LPM_MUX:LPM_MUX_component
data[0][0] => mux_23e:auto_generated.data[0]
data[1][0] => mux_23e:auto_generated.data[1]
data[2][0] => mux_23e:auto_generated.data[2]
sel[0] => mux_23e:auto_generated.sel[0]
sel[1] => mux_23e:auto_generated.sel[1]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_23e:auto_generated.result[0]


|harkka2018|uart:inst11|piso8:inst29|lpm_mux0:inst15|LPM_MUX:LPM_MUX_component|mux_23e:auto_generated
data[0] => data0_wire[0].IN0
data[1] => data1_wire[0].IN0
data[2] => data2_wire[0].IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => data0_wire[0].IN0
sel[0] => data1_wire[0].IN1
sel[1] => data2_wire[0].IN1
sel[1] => _.IN0


|harkka2018|uart:inst11|piso8:inst29|lpm_mux0:inst13
data0 => LPM_MUX:LPM_MUX_component.DATA[0][0]
data1 => LPM_MUX:LPM_MUX_component.DATA[1][0]
data2 => LPM_MUX:LPM_MUX_component.DATA[2][0]
sel[0] => LPM_MUX:LPM_MUX_component.SEL[0]
sel[1] => LPM_MUX:LPM_MUX_component.SEL[1]
result <= LPM_MUX:LPM_MUX_component.RESULT[0]


|harkka2018|uart:inst11|piso8:inst29|lpm_mux0:inst13|LPM_MUX:LPM_MUX_component
data[0][0] => mux_23e:auto_generated.data[0]
data[1][0] => mux_23e:auto_generated.data[1]
data[2][0] => mux_23e:auto_generated.data[2]
sel[0] => mux_23e:auto_generated.sel[0]
sel[1] => mux_23e:auto_generated.sel[1]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_23e:auto_generated.result[0]


|harkka2018|uart:inst11|piso8:inst29|lpm_mux0:inst13|LPM_MUX:LPM_MUX_component|mux_23e:auto_generated
data[0] => data0_wire[0].IN0
data[1] => data1_wire[0].IN0
data[2] => data2_wire[0].IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => data0_wire[0].IN0
sel[0] => data1_wire[0].IN1
sel[1] => data2_wire[0].IN1
sel[1] => _.IN0


|harkka2018|uart:inst11|piso8:inst29|lpm_mux0:inst11
data0 => LPM_MUX:LPM_MUX_component.DATA[0][0]
data1 => LPM_MUX:LPM_MUX_component.DATA[1][0]
data2 => LPM_MUX:LPM_MUX_component.DATA[2][0]
sel[0] => LPM_MUX:LPM_MUX_component.SEL[0]
sel[1] => LPM_MUX:LPM_MUX_component.SEL[1]
result <= LPM_MUX:LPM_MUX_component.RESULT[0]


|harkka2018|uart:inst11|piso8:inst29|lpm_mux0:inst11|LPM_MUX:LPM_MUX_component
data[0][0] => mux_23e:auto_generated.data[0]
data[1][0] => mux_23e:auto_generated.data[1]
data[2][0] => mux_23e:auto_generated.data[2]
sel[0] => mux_23e:auto_generated.sel[0]
sel[1] => mux_23e:auto_generated.sel[1]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_23e:auto_generated.result[0]


|harkka2018|uart:inst11|piso8:inst29|lpm_mux0:inst11|LPM_MUX:LPM_MUX_component|mux_23e:auto_generated
data[0] => data0_wire[0].IN0
data[1] => data1_wire[0].IN0
data[2] => data2_wire[0].IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => data0_wire[0].IN0
sel[0] => data1_wire[0].IN1
sel[1] => data2_wire[0].IN1
sel[1] => _.IN0


|harkka2018|uart:inst11|piso8:inst29|lpm_mux0:inst9
data0 => LPM_MUX:LPM_MUX_component.DATA[0][0]
data1 => LPM_MUX:LPM_MUX_component.DATA[1][0]
data2 => LPM_MUX:LPM_MUX_component.DATA[2][0]
sel[0] => LPM_MUX:LPM_MUX_component.SEL[0]
sel[1] => LPM_MUX:LPM_MUX_component.SEL[1]
result <= LPM_MUX:LPM_MUX_component.RESULT[0]


|harkka2018|uart:inst11|piso8:inst29|lpm_mux0:inst9|LPM_MUX:LPM_MUX_component
data[0][0] => mux_23e:auto_generated.data[0]
data[1][0] => mux_23e:auto_generated.data[1]
data[2][0] => mux_23e:auto_generated.data[2]
sel[0] => mux_23e:auto_generated.sel[0]
sel[1] => mux_23e:auto_generated.sel[1]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_23e:auto_generated.result[0]


|harkka2018|uart:inst11|piso8:inst29|lpm_mux0:inst9|LPM_MUX:LPM_MUX_component|mux_23e:auto_generated
data[0] => data0_wire[0].IN0
data[1] => data1_wire[0].IN0
data[2] => data2_wire[0].IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => data0_wire[0].IN0
sel[0] => data1_wire[0].IN1
sel[1] => data2_wire[0].IN1
sel[1] => _.IN0


|harkka2018|uart:inst11|piso8:inst29|lpm_mux0:inst7
data0 => LPM_MUX:LPM_MUX_component.DATA[0][0]
data1 => LPM_MUX:LPM_MUX_component.DATA[1][0]
data2 => LPM_MUX:LPM_MUX_component.DATA[2][0]
sel[0] => LPM_MUX:LPM_MUX_component.SEL[0]
sel[1] => LPM_MUX:LPM_MUX_component.SEL[1]
result <= LPM_MUX:LPM_MUX_component.RESULT[0]


|harkka2018|uart:inst11|piso8:inst29|lpm_mux0:inst7|LPM_MUX:LPM_MUX_component
data[0][0] => mux_23e:auto_generated.data[0]
data[1][0] => mux_23e:auto_generated.data[1]
data[2][0] => mux_23e:auto_generated.data[2]
sel[0] => mux_23e:auto_generated.sel[0]
sel[1] => mux_23e:auto_generated.sel[1]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_23e:auto_generated.result[0]


|harkka2018|uart:inst11|piso8:inst29|lpm_mux0:inst7|LPM_MUX:LPM_MUX_component|mux_23e:auto_generated
data[0] => data0_wire[0].IN0
data[1] => data1_wire[0].IN0
data[2] => data2_wire[0].IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => data0_wire[0].IN0
sel[0] => data1_wire[0].IN1
sel[1] => data2_wire[0].IN1
sel[1] => _.IN0


|harkka2018|uart:inst11|piso8:inst29|lpm_mux0:inst5
data0 => LPM_MUX:LPM_MUX_component.DATA[0][0]
data1 => LPM_MUX:LPM_MUX_component.DATA[1][0]
data2 => LPM_MUX:LPM_MUX_component.DATA[2][0]
sel[0] => LPM_MUX:LPM_MUX_component.SEL[0]
sel[1] => LPM_MUX:LPM_MUX_component.SEL[1]
result <= LPM_MUX:LPM_MUX_component.RESULT[0]


|harkka2018|uart:inst11|piso8:inst29|lpm_mux0:inst5|LPM_MUX:LPM_MUX_component
data[0][0] => mux_23e:auto_generated.data[0]
data[1][0] => mux_23e:auto_generated.data[1]
data[2][0] => mux_23e:auto_generated.data[2]
sel[0] => mux_23e:auto_generated.sel[0]
sel[1] => mux_23e:auto_generated.sel[1]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_23e:auto_generated.result[0]


|harkka2018|uart:inst11|piso8:inst29|lpm_mux0:inst5|LPM_MUX:LPM_MUX_component|mux_23e:auto_generated
data[0] => data0_wire[0].IN0
data[1] => data1_wire[0].IN0
data[2] => data2_wire[0].IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => data0_wire[0].IN0
sel[0] => data1_wire[0].IN1
sel[1] => data2_wire[0].IN1
sel[1] => _.IN0


|harkka2018|uart:inst11|piso8:inst29|lpm_mux0:inst3
data0 => LPM_MUX:LPM_MUX_component.DATA[0][0]
data1 => LPM_MUX:LPM_MUX_component.DATA[1][0]
data2 => LPM_MUX:LPM_MUX_component.DATA[2][0]
sel[0] => LPM_MUX:LPM_MUX_component.SEL[0]
sel[1] => LPM_MUX:LPM_MUX_component.SEL[1]
result <= LPM_MUX:LPM_MUX_component.RESULT[0]


|harkka2018|uart:inst11|piso8:inst29|lpm_mux0:inst3|LPM_MUX:LPM_MUX_component
data[0][0] => mux_23e:auto_generated.data[0]
data[1][0] => mux_23e:auto_generated.data[1]
data[2][0] => mux_23e:auto_generated.data[2]
sel[0] => mux_23e:auto_generated.sel[0]
sel[1] => mux_23e:auto_generated.sel[1]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_23e:auto_generated.result[0]


|harkka2018|uart:inst11|piso8:inst29|lpm_mux0:inst3|LPM_MUX:LPM_MUX_component|mux_23e:auto_generated
data[0] => data0_wire[0].IN0
data[1] => data1_wire[0].IN0
data[2] => data2_wire[0].IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => data0_wire[0].IN0
sel[0] => data1_wire[0].IN1
sel[1] => data2_wire[0].IN1
sel[1] => _.IN0


|harkka2018|uart:inst11|piso8:inst29|lpm_mux0:inst1
data0 => LPM_MUX:LPM_MUX_component.DATA[0][0]
data1 => LPM_MUX:LPM_MUX_component.DATA[1][0]
data2 => LPM_MUX:LPM_MUX_component.DATA[2][0]
sel[0] => LPM_MUX:LPM_MUX_component.SEL[0]
sel[1] => LPM_MUX:LPM_MUX_component.SEL[1]
result <= LPM_MUX:LPM_MUX_component.RESULT[0]


|harkka2018|uart:inst11|piso8:inst29|lpm_mux0:inst1|LPM_MUX:LPM_MUX_component
data[0][0] => mux_23e:auto_generated.data[0]
data[1][0] => mux_23e:auto_generated.data[1]
data[2][0] => mux_23e:auto_generated.data[2]
sel[0] => mux_23e:auto_generated.sel[0]
sel[1] => mux_23e:auto_generated.sel[1]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_23e:auto_generated.result[0]


|harkka2018|uart:inst11|piso8:inst29|lpm_mux0:inst1|LPM_MUX:LPM_MUX_component|mux_23e:auto_generated
data[0] => data0_wire[0].IN0
data[1] => data1_wire[0].IN0
data[2] => data2_wire[0].IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => data0_wire[0].IN0
sel[0] => data1_wire[0].IN1
sel[1] => data2_wire[0].IN1
sel[1] => _.IN0


|harkka2018|freq_gen:inst5
bist_freq_out <= inst2.DB_MAX_OUTPUT_PORT_TYPE
clock => lpm_counter60:inst1.clock
clock => ctrndiv_ext_m:inst11.clk
resetn => ctrndiv_ext_m:inst11.resetn
gen_freq_bcd[0] => bcd_bin_two_nested_loops:inst7.B[0]
gen_freq_bcd[1] => bcd_bin_two_nested_loops:inst7.B[1]
gen_freq_bcd[2] => bcd_bin_two_nested_loops:inst7.B[2]
gen_freq_bcd[3] => bcd_bin_two_nested_loops:inst7.B[3]
gen_freq_bcd[4] => bcd_bin_two_nested_loops:inst7.B[4]
gen_freq_bcd[5] => bcd_bin_two_nested_loops:inst7.B[5]
gen_freq_bcd[6] => bcd_bin_two_nested_loops:inst7.B[6]
gen_freq_bcd[7] => bcd_bin_two_nested_loops:inst7.B[7]
gen_freq_bcd[8] => bcd_bin_two_nested_loops:inst7.B[8]
gen_freq_bcd[9] => bcd_bin_two_nested_loops:inst7.B[9]
gen_freq_bcd[10] => bcd_bin_two_nested_loops:inst7.B[10]
gen_freq_bcd[11] => bcd_bin_two_nested_loops:inst7.B[11]
gen_freq_bcd[12] => bcd_bin_two_nested_loops:inst7.B[12]
gen_freq_bcd[13] => bcd_bin_two_nested_loops:inst7.B[13]
gen_freq_bcd[14] => bcd_bin_two_nested_loops:inst7.B[14]
gen_freq_bcd[15] => bcd_bin_two_nested_loops:inst7.B[15]


|harkka2018|freq_gen:inst5|lpm_counter60:inst1
clock => lpm_counter:LPM_COUNTER_component.clock
cnt_en => lpm_counter:LPM_COUNTER_component.cnt_en
cout <= lpm_counter:LPM_COUNTER_component.cout
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]
q[3] <= lpm_counter:LPM_COUNTER_component.q[3]
q[4] <= lpm_counter:LPM_COUNTER_component.q[4]
q[5] <= lpm_counter:LPM_COUNTER_component.q[5]


|harkka2018|freq_gen:inst5|lpm_counter60:inst1|lpm_counter:LPM_COUNTER_component
clock => cntr_04k:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_04k:auto_generated.cnt_en
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_04k:auto_generated.q[0]
q[1] <= cntr_04k:auto_generated.q[1]
q[2] <= cntr_04k:auto_generated.q[2]
q[3] <= cntr_04k:auto_generated.q[3]
q[4] <= cntr_04k:auto_generated.q[4]
q[5] <= cntr_04k:auto_generated.q[5]
cout <= cntr_04k:auto_generated.cout
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|harkka2018|freq_gen:inst5|lpm_counter60:inst1|lpm_counter:LPM_COUNTER_component|cntr_04k:auto_generated
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cnt_en => _.IN1
cout <= cout_actual.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT


|harkka2018|freq_gen:inst5|lpm_counter60:inst1|lpm_counter:LPM_COUNTER_component|cntr_04k:auto_generated|cmpr_acc:cmpr2
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[0].IN0
dataa[1] => data_wire[0].IN0
dataa[2] => data_wire[1].IN0
dataa[3] => data_wire[1].IN0
dataa[4] => data_wire[2].IN0
dataa[5] => data_wire[2].IN0
datab[0] => data_wire[0].IN1
datab[1] => data_wire[0].IN1
datab[2] => data_wire[1].IN1
datab[3] => data_wire[1].IN1
datab[4] => data_wire[2].IN1
datab[5] => data_wire[2].IN1


|harkka2018|freq_gen:inst5|ctrndiv_ext_m:inst11
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
resetn => count[0].ACLR
resetn => count[1].ACLR
resetn => count[2].ACLR
resetn => count[3].ACLR
resetn => count[4].ACLR
resetn => count[5].ACLR
resetn => count[6].ACLR
resetn => count[7].ACLR
resetn => count[8].ACLR
resetn => count[9].ACLR
resetn => count[10].ACLR
resetn => count[11].ACLR
resetn => count[12].ACLR
resetn => count[13].ACLR
resetn => count[14].ACLR
resetn => count[15].ACLR
resetn => count[16].ACLR
resetn => count[17].ACLR
resetn => count[18].ACLR
resetn => count[19].ACLR
resetn => count[20].ACLR
resetn => count[21].ACLR
resetn => count[22].ACLR
resetn => count[23].ACLR
resetn => count[24].ACLR
resetn => count[25].ACLR
enable => process_1.IN1
enable => count[7].ENA
enable => count[6].ENA
enable => count[5].ENA
enable => count[4].ENA
enable => count[3].ENA
enable => count[2].ENA
enable => count[1].ENA
enable => count[0].ENA
enable => count[8].ENA
enable => count[9].ENA
enable => count[10].ENA
enable => count[11].ENA
enable => count[12].ENA
enable => count[13].ENA
enable => count[14].ENA
enable => count[15].ENA
enable => count[16].ENA
enable => count[17].ENA
enable => count[18].ENA
enable => count[19].ENA
enable => count[20].ENA
enable => count[21].ENA
enable => count[22].ENA
enable => count[23].ENA
enable => count[24].ENA
enable => count[25].ENA
m[0] => Add1.IN52
m[1] => Add1.IN51
m[2] => Add1.IN50
m[3] => Add1.IN49
m[4] => Add1.IN48
m[5] => Add1.IN47
m[6] => Add1.IN46
m[7] => Add1.IN45
m[8] => Add1.IN44
m[9] => Add1.IN43
m[10] => Add1.IN42
m[11] => Add1.IN41
m[12] => Add1.IN40
m[13] => Add1.IN39
m[14] => Add1.IN38
m[15] => Add1.IN37
m[16] => Add1.IN36
m[17] => Add1.IN35
m[18] => Add1.IN34
m[19] => Add1.IN33
m[20] => Add1.IN32
m[21] => Add1.IN31
m[22] => Add1.IN30
m[23] => Add1.IN29
m[24] => Add1.IN28
m[25] => Add1.IN27
tc <= process_1.DB_MAX_OUTPUT_PORT_TYPE
ct[0] <= count[0].DB_MAX_OUTPUT_PORT_TYPE
ct[1] <= count[1].DB_MAX_OUTPUT_PORT_TYPE
ct[2] <= count[2].DB_MAX_OUTPUT_PORT_TYPE
ct[3] <= count[3].DB_MAX_OUTPUT_PORT_TYPE
ct[4] <= count[4].DB_MAX_OUTPUT_PORT_TYPE
ct[5] <= count[5].DB_MAX_OUTPUT_PORT_TYPE
ct[6] <= count[6].DB_MAX_OUTPUT_PORT_TYPE
ct[7] <= count[7].DB_MAX_OUTPUT_PORT_TYPE
ct[8] <= count[8].DB_MAX_OUTPUT_PORT_TYPE
ct[9] <= count[9].DB_MAX_OUTPUT_PORT_TYPE
ct[10] <= count[10].DB_MAX_OUTPUT_PORT_TYPE
ct[11] <= count[11].DB_MAX_OUTPUT_PORT_TYPE
ct[12] <= count[12].DB_MAX_OUTPUT_PORT_TYPE
ct[13] <= count[13].DB_MAX_OUTPUT_PORT_TYPE
ct[14] <= count[14].DB_MAX_OUTPUT_PORT_TYPE
ct[15] <= count[15].DB_MAX_OUTPUT_PORT_TYPE
ct[16] <= count[16].DB_MAX_OUTPUT_PORT_TYPE
ct[17] <= count[17].DB_MAX_OUTPUT_PORT_TYPE
ct[18] <= count[18].DB_MAX_OUTPUT_PORT_TYPE
ct[19] <= count[19].DB_MAX_OUTPUT_PORT_TYPE
ct[20] <= count[20].DB_MAX_OUTPUT_PORT_TYPE
ct[21] <= count[21].DB_MAX_OUTPUT_PORT_TYPE
ct[22] <= count[22].DB_MAX_OUTPUT_PORT_TYPE
ct[23] <= count[23].DB_MAX_OUTPUT_PORT_TYPE
ct[24] <= count[24].DB_MAX_OUTPUT_PORT_TYPE
ct[25] <= count[25].DB_MAX_OUTPUT_PORT_TYPE


|harkka2018|freq_gen:inst5|unsigned_divide:inst27
NUMER[0] => Div0.IN25
NUMER[1] => Div0.IN24
NUMER[2] => Div0.IN23
NUMER[3] => Div0.IN22
NUMER[4] => Div0.IN21
NUMER[5] => Div0.IN20
NUMER[6] => Div0.IN19
NUMER[7] => Div0.IN18
NUMER[8] => Div0.IN17
NUMER[9] => Div0.IN16
NUMER[10] => Div0.IN15
NUMER[11] => Div0.IN14
NUMER[12] => Div0.IN13
NUMER[13] => Div0.IN12
NUMER[14] => Div0.IN11
NUMER[15] => Div0.IN10
NUMER[16] => Div0.IN9
NUMER[17] => Div0.IN8
NUMER[18] => Div0.IN7
NUMER[19] => Div0.IN6
NUMER[20] => Div0.IN5
NUMER[21] => Div0.IN4
NUMER[22] => Div0.IN3
NUMER[23] => Div0.IN2
NUMER[24] => Div0.IN1
NUMER[25] => Div0.IN0
DENOM[0] => Div0.IN39
DENOM[1] => Div0.IN38
DENOM[2] => Div0.IN37
DENOM[3] => Div0.IN36
DENOM[4] => Div0.IN35
DENOM[5] => Div0.IN34
DENOM[6] => Div0.IN33
DENOM[7] => Div0.IN32
DENOM[8] => Div0.IN31
DENOM[9] => Div0.IN30
DENOM[10] => Div0.IN29
DENOM[11] => Div0.IN28
DENOM[12] => Div0.IN27
DENOM[13] => Div0.IN26
QUOT[0] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[1] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[2] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[3] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[4] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[5] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[6] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[7] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[8] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[9] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[10] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[11] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[12] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[13] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[14] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[15] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[16] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[17] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[18] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[19] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[20] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[21] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[22] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[23] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[24] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[25] <= Div0.DB_MAX_OUTPUT_PORT_TYPE


|harkka2018|freq_gen:inst5|bcd_bin_two_nested_loops:inst7
B[0] => P[0].DATAIN
B[1] => LessThan0.IN8
B[1] => Add0.IN8
B[1] => z.DATAA
B[2] => LessThan0.IN7
B[2] => Add0.IN7
B[2] => z.DATAA
B[3] => LessThan0.IN6
B[3] => Add0.IN6
B[3] => z.DATAA
B[4] => LessThan0.IN5
B[4] => Add0.IN5
B[4] => z.DATAA
B[5] => LessThan1.IN8
B[5] => Add1.IN8
B[5] => z.DATAA
B[6] => LessThan1.IN7
B[6] => Add1.IN7
B[6] => z.DATAA
B[7] => LessThan1.IN6
B[7] => Add1.IN6
B[7] => z.DATAA
B[8] => LessThan1.IN5
B[8] => Add1.IN5
B[8] => z.DATAA
B[9] => LessThan2.IN8
B[9] => Add2.IN8
B[9] => z.DATAA
B[10] => LessThan2.IN7
B[10] => Add2.IN7
B[10] => z.DATAA
B[11] => LessThan2.IN6
B[11] => Add2.IN6
B[11] => z.DATAA
B[12] => LessThan2.IN5
B[12] => Add2.IN5
B[12] => z.DATAA
B[13] => LessThan5.IN8
B[13] => Add5.IN8
B[13] => z.DATAA
B[14] => LessThan8.IN8
B[14] => Add8.IN8
B[14] => z.DATAA
B[15] => LessThan11.IN8
B[15] => Add11.IN8
B[15] => z.DATAA
P[0] <= B[0].DB_MAX_OUTPUT_PORT_TYPE
P[1] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[2] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[3] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[4] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[5] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[6] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[7] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[8] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[9] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[10] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[11] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[12] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[13] <= z.DB_MAX_OUTPUT_PORT_TYPE


|harkka2018|freq_gen:inst5|constant50M:inst
result[0] <= lpm_constant:LPM_CONSTANT_component.result[0]
result[1] <= lpm_constant:LPM_CONSTANT_component.result[1]
result[2] <= lpm_constant:LPM_CONSTANT_component.result[2]
result[3] <= lpm_constant:LPM_CONSTANT_component.result[3]
result[4] <= lpm_constant:LPM_CONSTANT_component.result[4]
result[5] <= lpm_constant:LPM_CONSTANT_component.result[5]
result[6] <= lpm_constant:LPM_CONSTANT_component.result[6]
result[7] <= lpm_constant:LPM_CONSTANT_component.result[7]
result[8] <= lpm_constant:LPM_CONSTANT_component.result[8]
result[9] <= lpm_constant:LPM_CONSTANT_component.result[9]
result[10] <= lpm_constant:LPM_CONSTANT_component.result[10]
result[11] <= lpm_constant:LPM_CONSTANT_component.result[11]
result[12] <= lpm_constant:LPM_CONSTANT_component.result[12]
result[13] <= lpm_constant:LPM_CONSTANT_component.result[13]
result[14] <= lpm_constant:LPM_CONSTANT_component.result[14]
result[15] <= lpm_constant:LPM_CONSTANT_component.result[15]
result[16] <= lpm_constant:LPM_CONSTANT_component.result[16]
result[17] <= lpm_constant:LPM_CONSTANT_component.result[17]
result[18] <= lpm_constant:LPM_CONSTANT_component.result[18]
result[19] <= lpm_constant:LPM_CONSTANT_component.result[19]
result[20] <= lpm_constant:LPM_CONSTANT_component.result[20]
result[21] <= lpm_constant:LPM_CONSTANT_component.result[21]
result[22] <= lpm_constant:LPM_CONSTANT_component.result[22]
result[23] <= lpm_constant:LPM_CONSTANT_component.result[23]
result[24] <= lpm_constant:LPM_CONSTANT_component.result[24]
result[25] <= lpm_constant:LPM_CONSTANT_component.result[25]


|harkka2018|freq_gen:inst5|constant50M:inst|lpm_constant:LPM_CONSTANT_component
result[0] <= <GND>
result[1] <= <GND>
result[2] <= <GND>
result[3] <= <GND>
result[4] <= <GND>
result[5] <= <VCC>
result[6] <= <VCC>
result[7] <= <GND>
result[8] <= <GND>
result[9] <= <VCC>
result[10] <= <GND>
result[11] <= <VCC>
result[12] <= <GND>
result[13] <= <VCC>
result[14] <= <VCC>
result[15] <= <VCC>
result[16] <= <GND>
result[17] <= <GND>
result[18] <= <GND>
result[19] <= <GND>
result[20] <= <GND>
result[21] <= <GND>
result[22] <= <GND>
result[23] <= <GND>
result[24] <= <GND>
result[25] <= <GND>


|harkka2018|freq_counter:inst
bcd[0] <= bin_bcd_two_nested_loops:inst6.P[0]
bcd[1] <= bin_bcd_two_nested_loops:inst6.P[1]
bcd[2] <= bin_bcd_two_nested_loops:inst6.P[2]
bcd[3] <= bin_bcd_two_nested_loops:inst6.P[3]
bcd[4] <= bin_bcd_two_nested_loops:inst6.P[4]
bcd[5] <= bin_bcd_two_nested_loops:inst6.P[5]
bcd[6] <= bin_bcd_two_nested_loops:inst6.P[6]
bcd[7] <= bin_bcd_two_nested_loops:inst6.P[7]
bcd[8] <= bin_bcd_two_nested_loops:inst6.P[8]
bcd[9] <= bin_bcd_two_nested_loops:inst6.P[9]
bcd[10] <= bin_bcd_two_nested_loops:inst6.P[10]
bcd[11] <= bin_bcd_two_nested_loops:inst6.P[11]
bcd[12] <= bin_bcd_two_nested_loops:inst6.P[12]
bcd[13] <= bin_bcd_two_nested_loops:inst6.P[13]
bcd[14] <= bin_bcd_two_nested_loops:inst6.P[14]
bcd[15] <= bin_bcd_two_nested_loops:inst6.P[15]
clock => reg16:inst5.clk
clock => ctr16div35536_sr:inst4.clk
resetn => reg16:inst5.resetn
resetn => ctr16div35536_sr:inst4.resetn
input_freq => reg16:inst5.load
input_freq => ctr16div35536_sr:inst4.sr
1khz => ctr16div35536_sr:inst4.e
red[0] <= <GND>
red[1] <= <GND>
red[2] <= <GND>
red[3] <= <GND>
red[4] <= <GND>
red[5] <= <GND>
red[6] <= <GND>
red[7] <= <GND>


|harkka2018|freq_counter:inst|bin_bcd_two_nested_loops:inst6
B[0] => P[0].DATAIN
B[1] => LessThan30.IN8
B[1] => Add30.IN8
B[1] => z.DATAA
B[2] => LessThan26.IN8
B[2] => Add26.IN8
B[2] => z.DATAA
B[3] => LessThan22.IN8
B[3] => Add22.IN8
B[3] => z.DATAA
B[4] => LessThan18.IN8
B[4] => Add18.IN8
B[4] => z.DATAA
B[5] => LessThan15.IN8
B[5] => Add15.IN8
B[5] => z.DATAA
B[6] => LessThan12.IN8
B[6] => Add12.IN8
B[6] => z.DATAA
B[7] => LessThan9.IN8
B[7] => Add9.IN8
B[7] => z.DATAA
B[8] => LessThan7.IN8
B[8] => Add7.IN8
B[8] => z.DATAA
B[9] => LessThan5.IN8
B[9] => Add5.IN8
B[9] => z.DATAA
B[10] => LessThan3.IN8
B[10] => Add3.IN8
B[10] => z.DATAA
B[11] => LessThan2.IN8
B[11] => Add2.IN8
B[11] => z.DATAA
B[12] => LessThan1.IN8
B[12] => Add1.IN8
B[12] => z.DATAA
B[13] => LessThan0.IN6
B[13] => Add0.IN6
B[13] => z.DATAA
B[14] => LessThan0.IN5
B[14] => Add0.IN5
B[14] => z.DATAA
B[15] => LessThan0.IN4
B[15] => Add0.IN4
B[15] => z.DATAA
P[0] <= B[0].DB_MAX_OUTPUT_PORT_TYPE
P[1] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[2] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[3] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[4] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[5] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[6] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[7] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[8] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[9] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[10] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[11] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[12] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[13] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[14] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[15] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[16] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[17] <= z.DB_MAX_OUTPUT_PORT_TYPE
P[18] <= z.DB_MAX_OUTPUT_PORT_TYPE


|harkka2018|freq_counter:inst|unsigned_divide:inst1
NUMER[0] => Div0.IN25
NUMER[1] => Div0.IN24
NUMER[2] => Div0.IN23
NUMER[3] => Div0.IN22
NUMER[4] => Div0.IN21
NUMER[5] => Div0.IN20
NUMER[6] => Div0.IN19
NUMER[7] => Div0.IN18
NUMER[8] => Div0.IN17
NUMER[9] => Div0.IN16
NUMER[10] => Div0.IN15
NUMER[11] => Div0.IN14
NUMER[12] => Div0.IN13
NUMER[13] => Div0.IN12
NUMER[14] => Div0.IN11
NUMER[15] => Div0.IN10
NUMER[16] => Div0.IN9
NUMER[17] => Div0.IN8
NUMER[18] => Div0.IN7
NUMER[19] => Div0.IN6
NUMER[20] => Div0.IN5
NUMER[21] => Div0.IN4
NUMER[22] => Div0.IN3
NUMER[23] => Div0.IN2
NUMER[24] => Div0.IN1
NUMER[25] => Div0.IN0
DENOM[0] => Div0.IN41
DENOM[1] => Div0.IN40
DENOM[2] => Div0.IN39
DENOM[3] => Div0.IN38
DENOM[4] => Div0.IN37
DENOM[5] => Div0.IN36
DENOM[6] => Div0.IN35
DENOM[7] => Div0.IN34
DENOM[8] => Div0.IN33
DENOM[9] => Div0.IN32
DENOM[10] => Div0.IN31
DENOM[11] => Div0.IN30
DENOM[12] => Div0.IN29
DENOM[13] => Div0.IN28
DENOM[14] => Div0.IN27
DENOM[15] => Div0.IN26
QUOT[0] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[1] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[2] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[3] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[4] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[5] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[6] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[7] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[8] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[9] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[10] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[11] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[12] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[13] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[14] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[15] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[16] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[17] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[18] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[19] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[20] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[21] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[22] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[23] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[24] <= Div0.DB_MAX_OUTPUT_PORT_TYPE
QUOT[25] <= Div0.DB_MAX_OUTPUT_PORT_TYPE


|harkka2018|freq_counter:inst|reg16:inst5
reg[0] <= inst11.DB_MAX_OUTPUT_PORT_TYPE
reg[1] <= inst10.DB_MAX_OUTPUT_PORT_TYPE
reg[2] <= inst9.DB_MAX_OUTPUT_PORT_TYPE
reg[3] <= inst8.DB_MAX_OUTPUT_PORT_TYPE
reg[4] <= inst7.DB_MAX_OUTPUT_PORT_TYPE
reg[5] <= inst6.DB_MAX_OUTPUT_PORT_TYPE
reg[6] <= inst5.DB_MAX_OUTPUT_PORT_TYPE
reg[7] <= inst4.DB_MAX_OUTPUT_PORT_TYPE
reg[8] <= inst3.DB_MAX_OUTPUT_PORT_TYPE
reg[9] <= inst2.DB_MAX_OUTPUT_PORT_TYPE
reg[10] <= inst1.DB_MAX_OUTPUT_PORT_TYPE
reg[11] <= inst.DB_MAX_OUTPUT_PORT_TYPE
reg[12] <= inst16.DB_MAX_OUTPUT_PORT_TYPE
reg[13] <= inst15.DB_MAX_OUTPUT_PORT_TYPE
reg[14] <= inst14.DB_MAX_OUTPUT_PORT_TYPE
reg[15] <= inst13.DB_MAX_OUTPUT_PORT_TYPE
resetn => inst.ACLR
resetn => inst4.ACLR
resetn => inst8.ACLR
resetn => inst3.ACLR
resetn => inst7.ACLR
resetn => inst11.ACLR
resetn => inst16.ACLR
resetn => inst6.ACLR
resetn => inst10.ACLR
resetn => inst1.ACLR
resetn => inst5.ACLR
resetn => inst9.ACLR
resetn => inst14.ACLR
resetn => inst13.ACLR
d[0] => inst11.DATAIN
d[1] => inst10.DATAIN
d[2] => inst9.DATAIN
d[3] => inst8.DATAIN
d[4] => inst7.DATAIN
d[5] => inst6.DATAIN
d[6] => inst5.DATAIN
d[7] => inst4.DATAIN
d[8] => inst3.DATAIN
d[9] => inst2.DATAIN
d[10] => inst1.DATAIN
d[11] => inst.DATAIN
d[12] => inst16.DATAIN
d[13] => inst15.DATAIN
d[14] => inst14.DATAIN
d[15] => inst13.DATAIN
clk => inst.CLK
clk => inst4.CLK
clk => inst8.CLK
clk => inst3.CLK
clk => inst7.CLK
clk => inst11.CLK
clk => inst16.CLK
clk => inst2.CLK
clk => inst6.CLK
clk => inst10.CLK
clk => inst15.CLK
clk => inst1.CLK
clk => inst5.CLK
clk => inst9.CLK
clk => inst14.CLK
clk => inst13.CLK
load => inst.ENA
load => inst4.ENA
load => inst8.ENA
load => inst3.ENA
load => inst7.ENA
load => inst11.ENA
load => inst16.ENA
load => inst2.ENA
load => inst6.ENA
load => inst10.ENA
load => inst15.ENA
load => inst1.ENA
load => inst5.ENA
load => inst9.ENA
load => inst14.ENA
load => inst13.ENA


|harkka2018|freq_counter:inst|ctr16div35536_sr:inst4
ctr_bin[0] <= ctr4div16e_sr:inst.q[0]
ctr_bin[1] <= ctr4div16e_sr:inst.q[1]
ctr_bin[2] <= ctr4div16e_sr:inst.q[2]
ctr_bin[3] <= ctr4div16e_sr:inst.q[3]
ctr_bin[4] <= ctr4div16e_sr:inst1.q[0]
ctr_bin[5] <= ctr4div16e_sr:inst1.q[1]
ctr_bin[6] <= ctr4div16e_sr:inst1.q[2]
ctr_bin[7] <= ctr4div16e_sr:inst1.q[3]
ctr_bin[8] <= ctr4div16e_sr:inst2.q[0]
ctr_bin[9] <= ctr4div16e_sr:inst2.q[1]
ctr_bin[10] <= ctr4div16e_sr:inst2.q[2]
ctr_bin[11] <= ctr4div16e_sr:inst2.q[3]
ctr_bin[12] <= ctr4div16e_sr:inst3.q[0]
ctr_bin[13] <= ctr4div16e_sr:inst3.q[1]
ctr_bin[14] <= ctr4div16e_sr:inst3.q[2]
ctr_bin[15] <= ctr4div16e_sr:inst3.q[3]
clk => ctr4div16e_sr:inst.clk
clk => ctr4div16e_sr:inst1.clk
clk => ctr4div16e_sr:inst2.clk
clk => ctr4div16e_sr:inst3.clk
e => ctr4div16e_sr:inst.e
resetn => ctr4div16e_sr:inst.rstn
resetn => ctr4div16e_sr:inst1.rstn
resetn => ctr4div16e_sr:inst2.rstn
resetn => ctr4div16e_sr:inst3.rstn
sr => ctr4div16e_sr:inst.sr
sr => ctr4div16e_sr:inst1.sr
sr => ctr4div16e_sr:inst2.sr
sr => ctr4div16e_sr:inst3.sr


|harkka2018|freq_counter:inst|ctr16div35536_sr:inst4|ctr4div16e_sr:inst
tc <= inst18.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= inst.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= inst1.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= inst2.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= inst3.DB_MAX_OUTPUT_PORT_TYPE
rstn => inst.ACLR
rstn => inst1.ACLR
rstn => inst2.ACLR
rstn => inst3.ACLR
clk => inst.CLK
clk => inst1.CLK
clk => inst2.CLK
clk => inst3.CLK
e => inst4.IN1
e => inst8.IN1
e => inst11.IN2
e => inst14.IN3
e => inst18.IN2
sr => inst16.IN0


|harkka2018|freq_counter:inst|ctr16div35536_sr:inst4|ctr4div16e_sr:inst1
tc <= inst18.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= inst.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= inst1.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= inst2.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= inst3.DB_MAX_OUTPUT_PORT_TYPE
rstn => inst.ACLR
rstn => inst1.ACLR
rstn => inst2.ACLR
rstn => inst3.ACLR
clk => inst.CLK
clk => inst1.CLK
clk => inst2.CLK
clk => inst3.CLK
e => inst4.IN1
e => inst8.IN1
e => inst11.IN2
e => inst14.IN3
e => inst18.IN2
sr => inst16.IN0


|harkka2018|freq_counter:inst|ctr16div35536_sr:inst4|ctr4div16e_sr:inst2
tc <= inst18.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= inst.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= inst1.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= inst2.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= inst3.DB_MAX_OUTPUT_PORT_TYPE
rstn => inst.ACLR
rstn => inst1.ACLR
rstn => inst2.ACLR
rstn => inst3.ACLR
clk => inst.CLK
clk => inst1.CLK
clk => inst2.CLK
clk => inst3.CLK
e => inst4.IN1
e => inst8.IN1
e => inst11.IN2
e => inst14.IN3
e => inst18.IN2
sr => inst16.IN0


|harkka2018|freq_counter:inst|ctr16div35536_sr:inst4|ctr4div16e_sr:inst3
tc <= inst18.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= inst.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= inst1.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= inst2.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= inst3.DB_MAX_OUTPUT_PORT_TYPE
rstn => inst.ACLR
rstn => inst1.ACLR
rstn => inst2.ACLR
rstn => inst3.ACLR
clk => inst.CLK
clk => inst1.CLK
clk => inst2.CLK
clk => inst3.CLK
e => inst4.IN1
e => inst8.IN1
e => inst11.IN2
e => inst14.IN3
e => inst18.IN2
sr => inst16.IN0


|harkka2018|freq_counter:inst|constant50M:inst
result[0] <= lpm_constant:LPM_CONSTANT_component.result[0]
result[1] <= lpm_constant:LPM_CONSTANT_component.result[1]
result[2] <= lpm_constant:LPM_CONSTANT_component.result[2]
result[3] <= lpm_constant:LPM_CONSTANT_component.result[3]
result[4] <= lpm_constant:LPM_CONSTANT_component.result[4]
result[5] <= lpm_constant:LPM_CONSTANT_component.result[5]
result[6] <= lpm_constant:LPM_CONSTANT_component.result[6]
result[7] <= lpm_constant:LPM_CONSTANT_component.result[7]
result[8] <= lpm_constant:LPM_CONSTANT_component.result[8]
result[9] <= lpm_constant:LPM_CONSTANT_component.result[9]
result[10] <= lpm_constant:LPM_CONSTANT_component.result[10]
result[11] <= lpm_constant:LPM_CONSTANT_component.result[11]
result[12] <= lpm_constant:LPM_CONSTANT_component.result[12]
result[13] <= lpm_constant:LPM_CONSTANT_component.result[13]
result[14] <= lpm_constant:LPM_CONSTANT_component.result[14]
result[15] <= lpm_constant:LPM_CONSTANT_component.result[15]
result[16] <= lpm_constant:LPM_CONSTANT_component.result[16]
result[17] <= lpm_constant:LPM_CONSTANT_component.result[17]
result[18] <= lpm_constant:LPM_CONSTANT_component.result[18]
result[19] <= lpm_constant:LPM_CONSTANT_component.result[19]
result[20] <= lpm_constant:LPM_CONSTANT_component.result[20]
result[21] <= lpm_constant:LPM_CONSTANT_component.result[21]
result[22] <= lpm_constant:LPM_CONSTANT_component.result[22]
result[23] <= lpm_constant:LPM_CONSTANT_component.result[23]
result[24] <= lpm_constant:LPM_CONSTANT_component.result[24]
result[25] <= lpm_constant:LPM_CONSTANT_component.result[25]


|harkka2018|freq_counter:inst|constant50M:inst|lpm_constant:LPM_CONSTANT_component
result[0] <= <GND>
result[1] <= <GND>
result[2] <= <GND>
result[3] <= <GND>
result[4] <= <GND>
result[5] <= <VCC>
result[6] <= <VCC>
result[7] <= <GND>
result[8] <= <GND>
result[9] <= <VCC>
result[10] <= <GND>
result[11] <= <VCC>
result[12] <= <GND>
result[13] <= <VCC>
result[14] <= <VCC>
result[15] <= <VCC>
result[16] <= <GND>
result[17] <= <GND>
result[18] <= <GND>
result[19] <= <GND>
result[20] <= <GND>
result[21] <= <GND>
result[22] <= <GND>
result[23] <= <GND>
result[24] <= <GND>
result[25] <= <GND>


|harkka2018|lpm_counter0:inst9
clock => lpm_counter:LPM_COUNTER_component.clock
cout <= lpm_counter:LPM_COUNTER_component.cout
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]
q[3] <= lpm_counter:LPM_COUNTER_component.q[3]
q[4] <= lpm_counter:LPM_COUNTER_component.q[4]
q[5] <= lpm_counter:LPM_COUNTER_component.q[5]
q[6] <= lpm_counter:LPM_COUNTER_component.q[6]
q[7] <= lpm_counter:LPM_COUNTER_component.q[7]
q[8] <= lpm_counter:LPM_COUNTER_component.q[8]
q[9] <= lpm_counter:LPM_COUNTER_component.q[9]
q[10] <= lpm_counter:LPM_COUNTER_component.q[10]
q[11] <= lpm_counter:LPM_COUNTER_component.q[11]
q[12] <= lpm_counter:LPM_COUNTER_component.q[12]
q[13] <= lpm_counter:LPM_COUNTER_component.q[13]
q[14] <= lpm_counter:LPM_COUNTER_component.q[14]
q[15] <= lpm_counter:LPM_COUNTER_component.q[15]
q[16] <= lpm_counter:LPM_COUNTER_component.q[16]
q[17] <= lpm_counter:LPM_COUNTER_component.q[17]
q[18] <= lpm_counter:LPM_COUNTER_component.q[18]
q[19] <= lpm_counter:LPM_COUNTER_component.q[19]
q[20] <= lpm_counter:LPM_COUNTER_component.q[20]
q[21] <= lpm_counter:LPM_COUNTER_component.q[21]
q[22] <= lpm_counter:LPM_COUNTER_component.q[22]
q[23] <= lpm_counter:LPM_COUNTER_component.q[23]
q[24] <= lpm_counter:LPM_COUNTER_component.q[24]


|harkka2018|lpm_counter0:inst9|lpm_counter:LPM_COUNTER_component
clock => cntr_9lj:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
data[6] => ~NO_FANOUT~
data[7] => ~NO_FANOUT~
data[8] => ~NO_FANOUT~
data[9] => ~NO_FANOUT~
data[10] => ~NO_FANOUT~
data[11] => ~NO_FANOUT~
data[12] => ~NO_FANOUT~
data[13] => ~NO_FANOUT~
data[14] => ~NO_FANOUT~
data[15] => ~NO_FANOUT~
data[16] => ~NO_FANOUT~
data[17] => ~NO_FANOUT~
data[18] => ~NO_FANOUT~
data[19] => ~NO_FANOUT~
data[20] => ~NO_FANOUT~
data[21] => ~NO_FANOUT~
data[22] => ~NO_FANOUT~
data[23] => ~NO_FANOUT~
data[24] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_9lj:auto_generated.q[0]
q[1] <= cntr_9lj:auto_generated.q[1]
q[2] <= cntr_9lj:auto_generated.q[2]
q[3] <= cntr_9lj:auto_generated.q[3]
q[4] <= cntr_9lj:auto_generated.q[4]
q[5] <= cntr_9lj:auto_generated.q[5]
q[6] <= cntr_9lj:auto_generated.q[6]
q[7] <= cntr_9lj:auto_generated.q[7]
q[8] <= cntr_9lj:auto_generated.q[8]
q[9] <= cntr_9lj:auto_generated.q[9]
q[10] <= cntr_9lj:auto_generated.q[10]
q[11] <= cntr_9lj:auto_generated.q[11]
q[12] <= cntr_9lj:auto_generated.q[12]
q[13] <= cntr_9lj:auto_generated.q[13]
q[14] <= cntr_9lj:auto_generated.q[14]
q[15] <= cntr_9lj:auto_generated.q[15]
q[16] <= cntr_9lj:auto_generated.q[16]
q[17] <= cntr_9lj:auto_generated.q[17]
q[18] <= cntr_9lj:auto_generated.q[18]
q[19] <= cntr_9lj:auto_generated.q[19]
q[20] <= cntr_9lj:auto_generated.q[20]
q[21] <= cntr_9lj:auto_generated.q[21]
q[22] <= cntr_9lj:auto_generated.q[22]
q[23] <= cntr_9lj:auto_generated.q[23]
q[24] <= cntr_9lj:auto_generated.q[24]
cout <= cntr_9lj:auto_generated.cout
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|harkka2018|lpm_counter0:inst9|lpm_counter:LPM_COUNTER_component|cntr_9lj:auto_generated
clock => counter_reg_bit1a[24].CLK
clock => counter_reg_bit1a[23].CLK
clock => counter_reg_bit1a[22].CLK
clock => counter_reg_bit1a[21].CLK
clock => counter_reg_bit1a[20].CLK
clock => counter_reg_bit1a[19].CLK
clock => counter_reg_bit1a[18].CLK
clock => counter_reg_bit1a[17].CLK
clock => counter_reg_bit1a[16].CLK
clock => counter_reg_bit1a[15].CLK
clock => counter_reg_bit1a[14].CLK
clock => counter_reg_bit1a[13].CLK
clock => counter_reg_bit1a[12].CLK
clock => counter_reg_bit1a[11].CLK
clock => counter_reg_bit1a[10].CLK
clock => counter_reg_bit1a[9].CLK
clock => counter_reg_bit1a[8].CLK
clock => counter_reg_bit1a[7].CLK
clock => counter_reg_bit1a[6].CLK
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cout <= cout_actual.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT
q[6] <= counter_reg_bit1a[6].REGOUT
q[7] <= counter_reg_bit1a[7].REGOUT
q[8] <= counter_reg_bit1a[8].REGOUT
q[9] <= counter_reg_bit1a[9].REGOUT
q[10] <= counter_reg_bit1a[10].REGOUT
q[11] <= counter_reg_bit1a[11].REGOUT
q[12] <= counter_reg_bit1a[12].REGOUT
q[13] <= counter_reg_bit1a[13].REGOUT
q[14] <= counter_reg_bit1a[14].REGOUT
q[15] <= counter_reg_bit1a[15].REGOUT
q[16] <= counter_reg_bit1a[16].REGOUT
q[17] <= counter_reg_bit1a[17].REGOUT
q[18] <= counter_reg_bit1a[18].REGOUT
q[19] <= counter_reg_bit1a[19].REGOUT
q[20] <= counter_reg_bit1a[20].REGOUT
q[21] <= counter_reg_bit1a[21].REGOUT
q[22] <= counter_reg_bit1a[22].REGOUT
q[23] <= counter_reg_bit1a[23].REGOUT
q[24] <= counter_reg_bit1a[24].REGOUT


|harkka2018|lpm_counter0:inst9|lpm_counter:LPM_COUNTER_component|cntr_9lj:auto_generated|cmpr_rdc:cmpr2
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[4].IN0
dataa[1] => data_wire[4].IN0
dataa[2] => data_wire[5].IN0
dataa[3] => data_wire[5].IN0
dataa[4] => data_wire[6].IN0
dataa[5] => data_wire[6].IN0
dataa[6] => data_wire[7].IN0
dataa[7] => data_wire[7].IN0
dataa[8] => data_wire[8].IN0
dataa[9] => data_wire[8].IN0
dataa[10] => data_wire[9].IN0
dataa[11] => data_wire[9].IN0
dataa[12] => data_wire[10].IN0
dataa[13] => data_wire[10].IN0
dataa[14] => data_wire[11].IN0
dataa[15] => data_wire[11].IN0
dataa[16] => data_wire[12].IN0
dataa[17] => data_wire[12].IN0
dataa[18] => data_wire[13].IN0
dataa[19] => data_wire[13].IN0
dataa[20] => data_wire[14].IN0
dataa[21] => data_wire[14].IN0
dataa[22] => data_wire[15].IN0
dataa[23] => data_wire[15].IN0
dataa[24] => data_wire[16].IN0
datab[0] => data_wire[4].IN1
datab[1] => data_wire[4].IN1
datab[2] => data_wire[5].IN1
datab[3] => data_wire[5].IN1
datab[4] => data_wire[6].IN1
datab[5] => data_wire[6].IN1
datab[6] => data_wire[7].IN1
datab[7] => data_wire[7].IN1
datab[8] => data_wire[8].IN1
datab[9] => data_wire[8].IN1
datab[10] => data_wire[9].IN1
datab[11] => data_wire[9].IN1
datab[12] => data_wire[10].IN1
datab[13] => data_wire[10].IN1
datab[14] => data_wire[11].IN1
datab[15] => data_wire[11].IN1
datab[16] => data_wire[12].IN1
datab[17] => data_wire[12].IN1
datab[18] => data_wire[13].IN1
datab[19] => data_wire[13].IN1
datab[20] => data_wire[14].IN1
datab[21] => data_wire[14].IN1
datab[22] => data_wire[15].IN1
datab[23] => data_wire[15].IN1
datab[24] => data_wire[16].IN1


|harkka2018|display_select_control:inst6
hex0[0] <= hex27seg:inst22.segment[0]
hex0[1] <= hex27seg:inst22.segment[1]
hex0[2] <= hex27seg:inst22.segment[2]
hex0[3] <= hex27seg:inst22.segment[3]
hex0[4] <= hex27seg:inst22.segment[4]
hex0[5] <= hex27seg:inst22.segment[5]
hex0[6] <= hex27seg:inst22.segment[6]
max[0] => lpm_mux4:inst22222.data2x[0]
max[1] => lpm_mux4:inst22222.data2x[1]
max[2] => lpm_mux4:inst22222.data2x[2]
max[3] => lpm_mux4:inst22222.data2x[3]
max[4] => lpm_mux4:inst22222.data2x[4]
max[5] => lpm_mux4:inst22222.data2x[5]
max[6] => lpm_mux4:inst22222.data2x[6]
max[7] => lpm_mux4:inst22222.data2x[7]
max[8] => lpm_mux4:inst22222.data2x[8]
max[9] => lpm_mux4:inst22222.data2x[9]
max[10] => lpm_mux4:inst22222.data2x[10]
max[11] => lpm_mux4:inst22222.data2x[11]
max[12] => lpm_mux4:inst22222.data2x[12]
max[13] => lpm_mux4:inst22222.data2x[13]
max[14] => lpm_mux4:inst22222.data2x[14]
max[15] => lpm_mux4:inst22222.data2x[15]
min[0] => lpm_mux4:inst22222.data3x[0]
min[1] => lpm_mux4:inst22222.data3x[1]
min[2] => lpm_mux4:inst22222.data3x[2]
min[3] => lpm_mux4:inst22222.data3x[3]
min[4] => lpm_mux4:inst22222.data3x[4]
min[5] => lpm_mux4:inst22222.data3x[5]
min[6] => lpm_mux4:inst22222.data3x[6]
min[7] => lpm_mux4:inst22222.data3x[7]
min[8] => lpm_mux4:inst22222.data3x[8]
min[9] => lpm_mux4:inst22222.data3x[9]
min[10] => lpm_mux4:inst22222.data3x[10]
min[11] => lpm_mux4:inst22222.data3x[11]
min[12] => lpm_mux4:inst22222.data3x[12]
min[13] => lpm_mux4:inst22222.data3x[13]
min[14] => lpm_mux4:inst22222.data3x[14]
min[15] => lpm_mux4:inst22222.data3x[15]
d1[0] => lpm_mux4:inst22222.data4x[0]
d1[1] => lpm_mux4:inst22222.data4x[1]
d1[2] => lpm_mux4:inst22222.data4x[2]
d1[3] => lpm_mux4:inst22222.data4x[3]
d1[4] => lpm_mux4:inst22222.data4x[4]
d1[5] => lpm_mux4:inst22222.data4x[5]
d1[6] => lpm_mux4:inst22222.data4x[6]
d1[7] => lpm_mux4:inst22222.data4x[7]
d1[8] => lpm_mux4:inst22222.data4x[8]
d1[9] => lpm_mux4:inst22222.data4x[9]
d1[10] => lpm_mux4:inst22222.data4x[10]
d1[11] => lpm_mux4:inst22222.data4x[11]
d1[12] => lpm_mux4:inst22222.data4x[12]
d1[13] => lpm_mux4:inst22222.data4x[13]
d1[14] => lpm_mux4:inst22222.data4x[14]
d1[15] => lpm_mux4:inst22222.data4x[15]
d0[0] => lpm_mux4:inst22222.data5x[0]
d0[1] => lpm_mux4:inst22222.data5x[1]
d0[2] => lpm_mux4:inst22222.data5x[2]
d0[3] => lpm_mux4:inst22222.data5x[3]
d0[4] => lpm_mux4:inst22222.data5x[4]
d0[5] => lpm_mux4:inst22222.data5x[5]
d0[6] => lpm_mux4:inst22222.data5x[6]
d0[7] => lpm_mux4:inst22222.data5x[7]
d0[8] => lpm_mux4:inst22222.data5x[8]
d0[9] => lpm_mux4:inst22222.data5x[9]
d0[10] => lpm_mux4:inst22222.data5x[10]
d0[11] => lpm_mux4:inst22222.data5x[11]
d0[12] => lpm_mux4:inst22222.data5x[12]
d0[13] => lpm_mux4:inst22222.data5x[13]
d0[14] => lpm_mux4:inst22222.data5x[14]
d0[15] => lpm_mux4:inst22222.data5x[15]
G[0] => lpm_mux4:inst22222.sel[0]
G[1] => lpm_mux4:inst22222.sel[1]
G[2] => lpm_mux4:inst22222.sel[2]
hex1[0] <= hex27seg:inst21.segment[0]
hex1[1] <= hex27seg:inst21.segment[1]
hex1[2] <= hex27seg:inst21.segment[2]
hex1[3] <= hex27seg:inst21.segment[3]
hex1[4] <= hex27seg:inst21.segment[4]
hex1[5] <= hex27seg:inst21.segment[5]
hex1[6] <= hex27seg:inst21.segment[6]
hex2[0] <= hex27seg:inst14.segment[0]
hex2[1] <= hex27seg:inst14.segment[1]
hex2[2] <= hex27seg:inst14.segment[2]
hex2[3] <= hex27seg:inst14.segment[3]
hex2[4] <= hex27seg:inst14.segment[4]
hex2[5] <= hex27seg:inst14.segment[5]
hex2[6] <= hex27seg:inst14.segment[6]
hex3[0] <= hex27seg:inst8.segment[0]
hex3[1] <= hex27seg:inst8.segment[1]
hex3[2] <= hex27seg:inst8.segment[2]
hex3[3] <= hex27seg:inst8.segment[3]
hex3[4] <= hex27seg:inst8.segment[4]
hex3[5] <= hex27seg:inst8.segment[5]
hex3[6] <= hex27seg:inst8.segment[6]


|harkka2018|display_select_control:inst6|hex27seg:inst22
hex[0] => Mux0.IN19
hex[0] => Mux1.IN19
hex[0] => Mux2.IN19
hex[0] => Mux3.IN19
hex[0] => Mux4.IN19
hex[0] => Mux5.IN19
hex[0] => Mux6.IN19
hex[1] => Mux0.IN18
hex[1] => Mux1.IN18
hex[1] => Mux2.IN18
hex[1] => Mux3.IN18
hex[1] => Mux4.IN18
hex[1] => Mux5.IN18
hex[1] => Mux6.IN18
hex[2] => Mux0.IN17
hex[2] => Mux1.IN17
hex[2] => Mux2.IN17
hex[2] => Mux3.IN17
hex[2] => Mux4.IN17
hex[2] => Mux5.IN17
hex[2] => Mux6.IN17
hex[3] => Mux0.IN16
hex[3] => Mux1.IN16
hex[3] => Mux2.IN16
hex[3] => Mux3.IN16
hex[3] => Mux4.IN16
hex[3] => Mux5.IN16
hex[3] => Mux6.IN16
segment[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segment[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segment[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segment[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segment[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segment[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segment[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|harkka2018|display_select_control:inst6|lpm_mux4:inst22222
data0x[0] => LPM_MUX:LPM_MUX_component.DATA[0][0]
data0x[1] => LPM_MUX:LPM_MUX_component.DATA[0][1]
data0x[2] => LPM_MUX:LPM_MUX_component.DATA[0][2]
data0x[3] => LPM_MUX:LPM_MUX_component.DATA[0][3]
data0x[4] => LPM_MUX:LPM_MUX_component.DATA[0][4]
data0x[5] => LPM_MUX:LPM_MUX_component.DATA[0][5]
data0x[6] => LPM_MUX:LPM_MUX_component.DATA[0][6]
data0x[7] => LPM_MUX:LPM_MUX_component.DATA[0][7]
data0x[8] => LPM_MUX:LPM_MUX_component.DATA[0][8]
data0x[9] => LPM_MUX:LPM_MUX_component.DATA[0][9]
data0x[10] => LPM_MUX:LPM_MUX_component.DATA[0][10]
data0x[11] => LPM_MUX:LPM_MUX_component.DATA[0][11]
data0x[12] => LPM_MUX:LPM_MUX_component.DATA[0][12]
data0x[13] => LPM_MUX:LPM_MUX_component.DATA[0][13]
data0x[14] => LPM_MUX:LPM_MUX_component.DATA[0][14]
data0x[15] => LPM_MUX:LPM_MUX_component.DATA[0][15]
data1x[0] => LPM_MUX:LPM_MUX_component.DATA[1][0]
data1x[1] => LPM_MUX:LPM_MUX_component.DATA[1][1]
data1x[2] => LPM_MUX:LPM_MUX_component.DATA[1][2]
data1x[3] => LPM_MUX:LPM_MUX_component.DATA[1][3]
data1x[4] => LPM_MUX:LPM_MUX_component.DATA[1][4]
data1x[5] => LPM_MUX:LPM_MUX_component.DATA[1][5]
data1x[6] => LPM_MUX:LPM_MUX_component.DATA[1][6]
data1x[7] => LPM_MUX:LPM_MUX_component.DATA[1][7]
data1x[8] => LPM_MUX:LPM_MUX_component.DATA[1][8]
data1x[9] => LPM_MUX:LPM_MUX_component.DATA[1][9]
data1x[10] => LPM_MUX:LPM_MUX_component.DATA[1][10]
data1x[11] => LPM_MUX:LPM_MUX_component.DATA[1][11]
data1x[12] => LPM_MUX:LPM_MUX_component.DATA[1][12]
data1x[13] => LPM_MUX:LPM_MUX_component.DATA[1][13]
data1x[14] => LPM_MUX:LPM_MUX_component.DATA[1][14]
data1x[15] => LPM_MUX:LPM_MUX_component.DATA[1][15]
data2x[0] => LPM_MUX:LPM_MUX_component.DATA[2][0]
data2x[1] => LPM_MUX:LPM_MUX_component.DATA[2][1]
data2x[2] => LPM_MUX:LPM_MUX_component.DATA[2][2]
data2x[3] => LPM_MUX:LPM_MUX_component.DATA[2][3]
data2x[4] => LPM_MUX:LPM_MUX_component.DATA[2][4]
data2x[5] => LPM_MUX:LPM_MUX_component.DATA[2][5]
data2x[6] => LPM_MUX:LPM_MUX_component.DATA[2][6]
data2x[7] => LPM_MUX:LPM_MUX_component.DATA[2][7]
data2x[8] => LPM_MUX:LPM_MUX_component.DATA[2][8]
data2x[9] => LPM_MUX:LPM_MUX_component.DATA[2][9]
data2x[10] => LPM_MUX:LPM_MUX_component.DATA[2][10]
data2x[11] => LPM_MUX:LPM_MUX_component.DATA[2][11]
data2x[12] => LPM_MUX:LPM_MUX_component.DATA[2][12]
data2x[13] => LPM_MUX:LPM_MUX_component.DATA[2][13]
data2x[14] => LPM_MUX:LPM_MUX_component.DATA[2][14]
data2x[15] => LPM_MUX:LPM_MUX_component.DATA[2][15]
data3x[0] => LPM_MUX:LPM_MUX_component.DATA[3][0]
data3x[1] => LPM_MUX:LPM_MUX_component.DATA[3][1]
data3x[2] => LPM_MUX:LPM_MUX_component.DATA[3][2]
data3x[3] => LPM_MUX:LPM_MUX_component.DATA[3][3]
data3x[4] => LPM_MUX:LPM_MUX_component.DATA[3][4]
data3x[5] => LPM_MUX:LPM_MUX_component.DATA[3][5]
data3x[6] => LPM_MUX:LPM_MUX_component.DATA[3][6]
data3x[7] => LPM_MUX:LPM_MUX_component.DATA[3][7]
data3x[8] => LPM_MUX:LPM_MUX_component.DATA[3][8]
data3x[9] => LPM_MUX:LPM_MUX_component.DATA[3][9]
data3x[10] => LPM_MUX:LPM_MUX_component.DATA[3][10]
data3x[11] => LPM_MUX:LPM_MUX_component.DATA[3][11]
data3x[12] => LPM_MUX:LPM_MUX_component.DATA[3][12]
data3x[13] => LPM_MUX:LPM_MUX_component.DATA[3][13]
data3x[14] => LPM_MUX:LPM_MUX_component.DATA[3][14]
data3x[15] => LPM_MUX:LPM_MUX_component.DATA[3][15]
data4x[0] => LPM_MUX:LPM_MUX_component.DATA[4][0]
data4x[1] => LPM_MUX:LPM_MUX_component.DATA[4][1]
data4x[2] => LPM_MUX:LPM_MUX_component.DATA[4][2]
data4x[3] => LPM_MUX:LPM_MUX_component.DATA[4][3]
data4x[4] => LPM_MUX:LPM_MUX_component.DATA[4][4]
data4x[5] => LPM_MUX:LPM_MUX_component.DATA[4][5]
data4x[6] => LPM_MUX:LPM_MUX_component.DATA[4][6]
data4x[7] => LPM_MUX:LPM_MUX_component.DATA[4][7]
data4x[8] => LPM_MUX:LPM_MUX_component.DATA[4][8]
data4x[9] => LPM_MUX:LPM_MUX_component.DATA[4][9]
data4x[10] => LPM_MUX:LPM_MUX_component.DATA[4][10]
data4x[11] => LPM_MUX:LPM_MUX_component.DATA[4][11]
data4x[12] => LPM_MUX:LPM_MUX_component.DATA[4][12]
data4x[13] => LPM_MUX:LPM_MUX_component.DATA[4][13]
data4x[14] => LPM_MUX:LPM_MUX_component.DATA[4][14]
data4x[15] => LPM_MUX:LPM_MUX_component.DATA[4][15]
data5x[0] => LPM_MUX:LPM_MUX_component.DATA[5][0]
data5x[1] => LPM_MUX:LPM_MUX_component.DATA[5][1]
data5x[2] => LPM_MUX:LPM_MUX_component.DATA[5][2]
data5x[3] => LPM_MUX:LPM_MUX_component.DATA[5][3]
data5x[4] => LPM_MUX:LPM_MUX_component.DATA[5][4]
data5x[5] => LPM_MUX:LPM_MUX_component.DATA[5][5]
data5x[6] => LPM_MUX:LPM_MUX_component.DATA[5][6]
data5x[7] => LPM_MUX:LPM_MUX_component.DATA[5][7]
data5x[8] => LPM_MUX:LPM_MUX_component.DATA[5][8]
data5x[9] => LPM_MUX:LPM_MUX_component.DATA[5][9]
data5x[10] => LPM_MUX:LPM_MUX_component.DATA[5][10]
data5x[11] => LPM_MUX:LPM_MUX_component.DATA[5][11]
data5x[12] => LPM_MUX:LPM_MUX_component.DATA[5][12]
data5x[13] => LPM_MUX:LPM_MUX_component.DATA[5][13]
data5x[14] => LPM_MUX:LPM_MUX_component.DATA[5][14]
data5x[15] => LPM_MUX:LPM_MUX_component.DATA[5][15]
sel[0] => LPM_MUX:LPM_MUX_component.SEL[0]
sel[1] => LPM_MUX:LPM_MUX_component.SEL[1]
sel[2] => LPM_MUX:LPM_MUX_component.SEL[2]
result[0] <= LPM_MUX:LPM_MUX_component.RESULT[0]
result[1] <= LPM_MUX:LPM_MUX_component.RESULT[1]
result[2] <= LPM_MUX:LPM_MUX_component.RESULT[2]
result[3] <= LPM_MUX:LPM_MUX_component.RESULT[3]
result[4] <= LPM_MUX:LPM_MUX_component.RESULT[4]
result[5] <= LPM_MUX:LPM_MUX_component.RESULT[5]
result[6] <= LPM_MUX:LPM_MUX_component.RESULT[6]
result[7] <= LPM_MUX:LPM_MUX_component.RESULT[7]
result[8] <= LPM_MUX:LPM_MUX_component.RESULT[8]
result[9] <= LPM_MUX:LPM_MUX_component.RESULT[9]
result[10] <= LPM_MUX:LPM_MUX_component.RESULT[10]
result[11] <= LPM_MUX:LPM_MUX_component.RESULT[11]
result[12] <= LPM_MUX:LPM_MUX_component.RESULT[12]
result[13] <= LPM_MUX:LPM_MUX_component.RESULT[13]
result[14] <= LPM_MUX:LPM_MUX_component.RESULT[14]
result[15] <= LPM_MUX:LPM_MUX_component.RESULT[15]


|harkka2018|display_select_control:inst6|lpm_mux4:inst22222|LPM_MUX:LPM_MUX_component
data[0][0] => mux_s4e:auto_generated.data[0]
data[0][1] => mux_s4e:auto_generated.data[1]
data[0][2] => mux_s4e:auto_generated.data[2]
data[0][3] => mux_s4e:auto_generated.data[3]
data[0][4] => mux_s4e:auto_generated.data[4]
data[0][5] => mux_s4e:auto_generated.data[5]
data[0][6] => mux_s4e:auto_generated.data[6]
data[0][7] => mux_s4e:auto_generated.data[7]
data[0][8] => mux_s4e:auto_generated.data[8]
data[0][9] => mux_s4e:auto_generated.data[9]
data[0][10] => mux_s4e:auto_generated.data[10]
data[0][11] => mux_s4e:auto_generated.data[11]
data[0][12] => mux_s4e:auto_generated.data[12]
data[0][13] => mux_s4e:auto_generated.data[13]
data[0][14] => mux_s4e:auto_generated.data[14]
data[0][15] => mux_s4e:auto_generated.data[15]
data[1][0] => mux_s4e:auto_generated.data[16]
data[1][1] => mux_s4e:auto_generated.data[17]
data[1][2] => mux_s4e:auto_generated.data[18]
data[1][3] => mux_s4e:auto_generated.data[19]
data[1][4] => mux_s4e:auto_generated.data[20]
data[1][5] => mux_s4e:auto_generated.data[21]
data[1][6] => mux_s4e:auto_generated.data[22]
data[1][7] => mux_s4e:auto_generated.data[23]
data[1][8] => mux_s4e:auto_generated.data[24]
data[1][9] => mux_s4e:auto_generated.data[25]
data[1][10] => mux_s4e:auto_generated.data[26]
data[1][11] => mux_s4e:auto_generated.data[27]
data[1][12] => mux_s4e:auto_generated.data[28]
data[1][13] => mux_s4e:auto_generated.data[29]
data[1][14] => mux_s4e:auto_generated.data[30]
data[1][15] => mux_s4e:auto_generated.data[31]
data[2][0] => mux_s4e:auto_generated.data[32]
data[2][1] => mux_s4e:auto_generated.data[33]
data[2][2] => mux_s4e:auto_generated.data[34]
data[2][3] => mux_s4e:auto_generated.data[35]
data[2][4] => mux_s4e:auto_generated.data[36]
data[2][5] => mux_s4e:auto_generated.data[37]
data[2][6] => mux_s4e:auto_generated.data[38]
data[2][7] => mux_s4e:auto_generated.data[39]
data[2][8] => mux_s4e:auto_generated.data[40]
data[2][9] => mux_s4e:auto_generated.data[41]
data[2][10] => mux_s4e:auto_generated.data[42]
data[2][11] => mux_s4e:auto_generated.data[43]
data[2][12] => mux_s4e:auto_generated.data[44]
data[2][13] => mux_s4e:auto_generated.data[45]
data[2][14] => mux_s4e:auto_generated.data[46]
data[2][15] => mux_s4e:auto_generated.data[47]
data[3][0] => mux_s4e:auto_generated.data[48]
data[3][1] => mux_s4e:auto_generated.data[49]
data[3][2] => mux_s4e:auto_generated.data[50]
data[3][3] => mux_s4e:auto_generated.data[51]
data[3][4] => mux_s4e:auto_generated.data[52]
data[3][5] => mux_s4e:auto_generated.data[53]
data[3][6] => mux_s4e:auto_generated.data[54]
data[3][7] => mux_s4e:auto_generated.data[55]
data[3][8] => mux_s4e:auto_generated.data[56]
data[3][9] => mux_s4e:auto_generated.data[57]
data[3][10] => mux_s4e:auto_generated.data[58]
data[3][11] => mux_s4e:auto_generated.data[59]
data[3][12] => mux_s4e:auto_generated.data[60]
data[3][13] => mux_s4e:auto_generated.data[61]
data[3][14] => mux_s4e:auto_generated.data[62]
data[3][15] => mux_s4e:auto_generated.data[63]
data[4][0] => mux_s4e:auto_generated.data[64]
data[4][1] => mux_s4e:auto_generated.data[65]
data[4][2] => mux_s4e:auto_generated.data[66]
data[4][3] => mux_s4e:auto_generated.data[67]
data[4][4] => mux_s4e:auto_generated.data[68]
data[4][5] => mux_s4e:auto_generated.data[69]
data[4][6] => mux_s4e:auto_generated.data[70]
data[4][7] => mux_s4e:auto_generated.data[71]
data[4][8] => mux_s4e:auto_generated.data[72]
data[4][9] => mux_s4e:auto_generated.data[73]
data[4][10] => mux_s4e:auto_generated.data[74]
data[4][11] => mux_s4e:auto_generated.data[75]
data[4][12] => mux_s4e:auto_generated.data[76]
data[4][13] => mux_s4e:auto_generated.data[77]
data[4][14] => mux_s4e:auto_generated.data[78]
data[4][15] => mux_s4e:auto_generated.data[79]
data[5][0] => mux_s4e:auto_generated.data[80]
data[5][1] => mux_s4e:auto_generated.data[81]
data[5][2] => mux_s4e:auto_generated.data[82]
data[5][3] => mux_s4e:auto_generated.data[83]
data[5][4] => mux_s4e:auto_generated.data[84]
data[5][5] => mux_s4e:auto_generated.data[85]
data[5][6] => mux_s4e:auto_generated.data[86]
data[5][7] => mux_s4e:auto_generated.data[87]
data[5][8] => mux_s4e:auto_generated.data[88]
data[5][9] => mux_s4e:auto_generated.data[89]
data[5][10] => mux_s4e:auto_generated.data[90]
data[5][11] => mux_s4e:auto_generated.data[91]
data[5][12] => mux_s4e:auto_generated.data[92]
data[5][13] => mux_s4e:auto_generated.data[93]
data[5][14] => mux_s4e:auto_generated.data[94]
data[5][15] => mux_s4e:auto_generated.data[95]
sel[0] => mux_s4e:auto_generated.sel[0]
sel[1] => mux_s4e:auto_generated.sel[1]
sel[2] => mux_s4e:auto_generated.sel[2]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_s4e:auto_generated.result[0]
result[1] <= mux_s4e:auto_generated.result[1]
result[2] <= mux_s4e:auto_generated.result[2]
result[3] <= mux_s4e:auto_generated.result[3]
result[4] <= mux_s4e:auto_generated.result[4]
result[5] <= mux_s4e:auto_generated.result[5]
result[6] <= mux_s4e:auto_generated.result[6]
result[7] <= mux_s4e:auto_generated.result[7]
result[8] <= mux_s4e:auto_generated.result[8]
result[9] <= mux_s4e:auto_generated.result[9]
result[10] <= mux_s4e:auto_generated.result[10]
result[11] <= mux_s4e:auto_generated.result[11]
result[12] <= mux_s4e:auto_generated.result[12]
result[13] <= mux_s4e:auto_generated.result[13]
result[14] <= mux_s4e:auto_generated.result[14]
result[15] <= mux_s4e:auto_generated.result[15]


|harkka2018|display_select_control:inst6|lpm_mux4:inst22222|LPM_MUX:LPM_MUX_component|mux_s4e:auto_generated
data[0] => _.IN0
data[0] => _.IN0
data[1] => _.IN0
data[1] => _.IN0
data[2] => _.IN0
data[2] => _.IN0
data[3] => _.IN0
data[3] => _.IN0
data[4] => _.IN0
data[4] => _.IN0
data[5] => _.IN0
data[5] => _.IN0
data[6] => _.IN0
data[6] => _.IN0
data[7] => _.IN0
data[7] => _.IN0
data[8] => _.IN0
data[8] => _.IN0
data[9] => _.IN0
data[9] => _.IN0
data[10] => _.IN0
data[10] => _.IN0
data[11] => _.IN0
data[11] => _.IN0
data[12] => _.IN0
data[12] => _.IN0
data[13] => _.IN0
data[13] => _.IN0
data[14] => _.IN0
data[14] => _.IN0
data[15] => _.IN0
data[15] => _.IN0
data[16] => _.IN0
data[17] => _.IN0
data[18] => _.IN0
data[19] => _.IN0
data[20] => _.IN0
data[21] => _.IN0
data[22] => _.IN0
data[23] => _.IN0
data[24] => _.IN0
data[25] => _.IN0
data[26] => _.IN0
data[27] => _.IN0
data[28] => _.IN0
data[29] => _.IN0
data[30] => _.IN0
data[31] => _.IN0
data[32] => _.IN1
data[32] => _.IN1
data[33] => _.IN1
data[33] => _.IN1
data[34] => _.IN1
data[34] => _.IN1
data[35] => _.IN1
data[35] => _.IN1
data[36] => _.IN1
data[36] => _.IN1
data[37] => _.IN1
data[37] => _.IN1
data[38] => _.IN1
data[38] => _.IN1
data[39] => _.IN1
data[39] => _.IN1
data[40] => _.IN1
data[40] => _.IN1
data[41] => _.IN1
data[41] => _.IN1
data[42] => _.IN1
data[42] => _.IN1
data[43] => _.IN1
data[43] => _.IN1
data[44] => _.IN1
data[44] => _.IN1
data[45] => _.IN1
data[45] => _.IN1
data[46] => _.IN1
data[46] => _.IN1
data[47] => _.IN1
data[47] => _.IN1
data[48] => _.IN0
data[49] => _.IN0
data[50] => _.IN0
data[51] => _.IN0
data[52] => _.IN0
data[53] => _.IN0
data[54] => _.IN0
data[55] => _.IN0
data[56] => _.IN0
data[57] => _.IN0
data[58] => _.IN0
data[59] => _.IN0
data[60] => _.IN0
data[61] => _.IN0
data[62] => _.IN0
data[63] => _.IN0
data[64] => _.IN0
data[64] => _.IN0
data[65] => _.IN0
data[65] => _.IN0
data[66] => _.IN0
data[66] => _.IN0
data[67] => _.IN0
data[67] => _.IN0
data[68] => _.IN0
data[68] => _.IN0
data[69] => _.IN0
data[69] => _.IN0
data[70] => _.IN0
data[70] => _.IN0
data[71] => _.IN0
data[71] => _.IN0
data[72] => _.IN0
data[72] => _.IN0
data[73] => _.IN0
data[73] => _.IN0
data[74] => _.IN0
data[74] => _.IN0
data[75] => _.IN0
data[75] => _.IN0
data[76] => _.IN0
data[76] => _.IN0
data[77] => _.IN0
data[77] => _.IN0
data[78] => _.IN0
data[78] => _.IN0
data[79] => _.IN0
data[79] => _.IN0
data[80] => _.IN0
data[81] => _.IN0
data[82] => _.IN0
data[83] => _.IN0
data[84] => _.IN0
data[85] => _.IN0
data[86] => _.IN0
data[87] => _.IN0
data[88] => _.IN0
data[89] => _.IN0
data[90] => _.IN0
data[91] => _.IN0
data[92] => _.IN0
data[93] => _.IN0
data[94] => _.IN0
data[95] => _.IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result_node[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result_node[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= result_node[3].DB_MAX_OUTPUT_PORT_TYPE
result[4] <= result_node[4].DB_MAX_OUTPUT_PORT_TYPE
result[5] <= result_node[5].DB_MAX_OUTPUT_PORT_TYPE
result[6] <= result_node[6].DB_MAX_OUTPUT_PORT_TYPE
result[7] <= result_node[7].DB_MAX_OUTPUT_PORT_TYPE
result[8] <= result_node[8].DB_MAX_OUTPUT_PORT_TYPE
result[9] <= result_node[9].DB_MAX_OUTPUT_PORT_TYPE
result[10] <= result_node[10].DB_MAX_OUTPUT_PORT_TYPE
result[11] <= result_node[11].DB_MAX_OUTPUT_PORT_TYPE
result[12] <= result_node[12].DB_MAX_OUTPUT_PORT_TYPE
result[13] <= result_node[13].DB_MAX_OUTPUT_PORT_TYPE
result[14] <= result_node[14].DB_MAX_OUTPUT_PORT_TYPE
result[15] <= result_node[15].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[2] => result_node[15].IN0
sel[2] => _.IN0
sel[2] => result_node[14].IN0
sel[2] => _.IN0
sel[2] => result_node[13].IN0
sel[2] => _.IN0
sel[2] => result_node[12].IN0
sel[2] => _.IN0
sel[2] => result_node[11].IN0
sel[2] => _.IN0
sel[2] => result_node[10].IN0
sel[2] => _.IN0
sel[2] => result_node[9].IN0
sel[2] => _.IN0
sel[2] => result_node[8].IN0
sel[2] => _.IN0
sel[2] => result_node[7].IN0
sel[2] => _.IN0
sel[2] => result_node[6].IN0
sel[2] => _.IN0
sel[2] => result_node[5].IN0
sel[2] => _.IN0
sel[2] => result_node[4].IN0
sel[2] => _.IN0
sel[2] => result_node[3].IN0
sel[2] => _.IN0
sel[2] => result_node[2].IN0
sel[2] => _.IN0
sel[2] => result_node[1].IN0
sel[2] => _.IN0
sel[2] => result_node[0].IN0
sel[2] => _.IN0


|harkka2018|display_select_control:inst6|hex27seg:inst21
hex[0] => Mux0.IN19
hex[0] => Mux1.IN19
hex[0] => Mux2.IN19
hex[0] => Mux3.IN19
hex[0] => Mux4.IN19
hex[0] => Mux5.IN19
hex[0] => Mux6.IN19
hex[1] => Mux0.IN18
hex[1] => Mux1.IN18
hex[1] => Mux2.IN18
hex[1] => Mux3.IN18
hex[1] => Mux4.IN18
hex[1] => Mux5.IN18
hex[1] => Mux6.IN18
hex[2] => Mux0.IN17
hex[2] => Mux1.IN17
hex[2] => Mux2.IN17
hex[2] => Mux3.IN17
hex[2] => Mux4.IN17
hex[2] => Mux5.IN17
hex[2] => Mux6.IN17
hex[3] => Mux0.IN16
hex[3] => Mux1.IN16
hex[3] => Mux2.IN16
hex[3] => Mux3.IN16
hex[3] => Mux4.IN16
hex[3] => Mux5.IN16
hex[3] => Mux6.IN16
segment[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segment[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segment[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segment[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segment[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segment[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segment[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|harkka2018|display_select_control:inst6|hex27seg:inst14
hex[0] => Mux0.IN19
hex[0] => Mux1.IN19
hex[0] => Mux2.IN19
hex[0] => Mux3.IN19
hex[0] => Mux4.IN19
hex[0] => Mux5.IN19
hex[0] => Mux6.IN19
hex[1] => Mux0.IN18
hex[1] => Mux1.IN18
hex[1] => Mux2.IN18
hex[1] => Mux3.IN18
hex[1] => Mux4.IN18
hex[1] => Mux5.IN18
hex[1] => Mux6.IN18
hex[2] => Mux0.IN17
hex[2] => Mux1.IN17
hex[2] => Mux2.IN17
hex[2] => Mux3.IN17
hex[2] => Mux4.IN17
hex[2] => Mux5.IN17
hex[2] => Mux6.IN17
hex[3] => Mux0.IN16
hex[3] => Mux1.IN16
hex[3] => Mux2.IN16
hex[3] => Mux3.IN16
hex[3] => Mux4.IN16
hex[3] => Mux5.IN16
hex[3] => Mux6.IN16
segment[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segment[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segment[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segment[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segment[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segment[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segment[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|harkka2018|display_select_control:inst6|hex27seg:inst8
hex[0] => Mux0.IN19
hex[0] => Mux1.IN19
hex[0] => Mux2.IN19
hex[0] => Mux3.IN19
hex[0] => Mux4.IN19
hex[0] => Mux5.IN19
hex[0] => Mux6.IN19
hex[1] => Mux0.IN18
hex[1] => Mux1.IN18
hex[1] => Mux2.IN18
hex[1] => Mux3.IN18
hex[1] => Mux4.IN18
hex[1] => Mux5.IN18
hex[1] => Mux6.IN18
hex[2] => Mux0.IN17
hex[2] => Mux1.IN17
hex[2] => Mux2.IN17
hex[2] => Mux3.IN17
hex[2] => Mux4.IN17
hex[2] => Mux5.IN17
hex[2] => Mux6.IN17
hex[3] => Mux0.IN16
hex[3] => Mux1.IN16
hex[3] => Mux2.IN16
hex[3] => Mux3.IN16
hex[3] => Mux4.IN16
hex[3] => Mux5.IN16
hex[3] => Mux6.IN16
segment[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segment[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segment[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segment[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segment[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segment[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segment[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|harkka2018|rotary_encoder:inst4
bcd[0] <= updownBCDcounter:inst6.q[0]
bcd[1] <= updownBCDcounter:inst6.q[1]
bcd[2] <= updownBCDcounter:inst6.q[2]
bcd[3] <= updownBCDcounter:inst6.q[3]
bcd[4] <= updownBCDcounter:inst7.q[0]
bcd[5] <= updownBCDcounter:inst7.q[1]
bcd[6] <= updownBCDcounter:inst7.q[2]
bcd[7] <= updownBCDcounter:inst7.q[3]
bcd[8] <= updownBCDcounter:inst8.q[0]
bcd[9] <= updownBCDcounter:inst8.q[1]
bcd[10] <= updownBCDcounter:inst8.q[2]
bcd[11] <= updownBCDcounter:inst8.q[3]
bcd[12] <= updownBCDcounter:inst9.q[0]
bcd[13] <= updownBCDcounter:inst9.q[1]
bcd[14] <= updownBCDcounter:inst9.q[2]
bcd[15] <= updownBCDcounter:inst9.q[3]
rota1 => input_sync_ff:inst5.d
clk => input_sync_ff:inst5.clk
clk => updownBCDcounter:inst6.clock
clk => input_sync_ff:inst4.clk
clk => ctr_sel:inst88.clk
clk => updownBCDcounter:inst7.clock
clk => updownBCDcounter:inst8.clock
clk => updownBCDcounter:inst9.clock
resetn => input_sync_ff:inst5.resetn
resetn => input_sync_ff:inst4.resetn
resetn => ctr_sel:inst88.resetn
resetn => inst1.IN0
rota0 => input_sync_ff:inst4.d
enable => inst2.IN1
enable => inst15.IN1
enable => inst3.IN1
enable => inst99.IN1
enable => inst10.IN1
num_sel[0] <= ctr_sel:inst88.sel0
num_sel[1] <= ctr_sel:inst88.sel1
num_sel[2] <= ctr_sel:inst88.sel2
num_sel[3] <= ctr_sel:inst88.sel3
s3 => inst11.IN0
BF => inst15.IN2


|harkka2018|rotary_encoder:inst4|updownBCDcounter:inst6
aload => lpm_counter:LPM_COUNTER_component.aload
clock => lpm_counter:LPM_COUNTER_component.clock
cnt_en => lpm_counter:LPM_COUNTER_component.cnt_en
data[0] => lpm_counter:LPM_COUNTER_component.data[0]
data[1] => lpm_counter:LPM_COUNTER_component.data[1]
data[2] => lpm_counter:LPM_COUNTER_component.data[2]
data[3] => lpm_counter:LPM_COUNTER_component.data[3]
updown => lpm_counter:LPM_COUNTER_component.updown
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]
q[3] <= lpm_counter:LPM_COUNTER_component.q[3]


|harkka2018|rotary_encoder:inst4|updownBCDcounter:inst6|lpm_counter:LPM_COUNTER_component
clock => cntr_4bj:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_4bj:auto_generated.cnt_en
updown => cntr_4bj:auto_generated.updown
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => cntr_4bj:auto_generated.aload
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => cntr_4bj:auto_generated.data[0]
data[1] => cntr_4bj:auto_generated.data[1]
data[2] => cntr_4bj:auto_generated.data[2]
data[3] => cntr_4bj:auto_generated.data[3]
cin => ~NO_FANOUT~
q[0] <= cntr_4bj:auto_generated.q[0]
q[1] <= cntr_4bj:auto_generated.q[1]
q[2] <= cntr_4bj:auto_generated.q[2]
q[3] <= cntr_4bj:auto_generated.q[3]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|harkka2018|rotary_encoder:inst4|updownBCDcounter:inst6|lpm_counter:LPM_COUNTER_component|cntr_4bj:auto_generated
aload => aclr_actual.IN1
aload => _.IN0
aload => _.IN0
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cnt_en => _.IN0
data[0] => _.IN1
data[0] => a_data[0].IN1
data[1] => _.IN1
data[1] => a_data[1].IN1
data[2] => _.IN1
data[2] => a_data[2].IN1
data[3] => _.IN1
data[3] => a_data[3].IN1
q[0] <= safe_q[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= safe_q[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= safe_q[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= safe_q[3].DB_MAX_OUTPUT_PORT_TYPE
updown => counter_comb_bita3.IN1
updown => counter_comb_bita2.IN1
updown => counter_comb_bita1.IN1
updown => counter_comb_bita0.IN1
updown => _.IN0
updown => cout_actual.IN1


|harkka2018|rotary_encoder:inst4|updownBCDcounter:inst6|lpm_counter:LPM_COUNTER_component|cntr_4bj:auto_generated|cmpr_8cc:cmpr2
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[0].IN0
dataa[1] => data_wire[0].IN0
dataa[2] => data_wire[1].IN0
dataa[3] => data_wire[1].IN0
datab[0] => data_wire[0].IN1
datab[1] => data_wire[0].IN1
datab[2] => data_wire[1].IN1
datab[3] => data_wire[1].IN1


|harkka2018|rotary_encoder:inst4|input_sync_ff:inst5
s_r <= inst3.DB_MAX_OUTPUT_PORT_TYPE
resetn => inst1.ACLR
resetn => inst.ACLR
resetn => inst2.ACLR
clk => inst1.CLK
clk => inst.CLK
clk => inst2.CLK
d => inst.DATAIN
s <= inst1.DB_MAX_OUTPUT_PORT_TYPE


|harkka2018|rotary_encoder:inst4|input_sync_ff:inst4
s_r <= inst3.DB_MAX_OUTPUT_PORT_TYPE
resetn => inst1.ACLR
resetn => inst.ACLR
resetn => inst2.ACLR
clk => inst1.CLK
clk => inst.CLK
clk => inst2.CLK
d => inst.DATAIN
s <= inst1.DB_MAX_OUTPUT_PORT_TYPE


|harkka2018|rotary_encoder:inst4|ctr_sel:inst88
Q0 <= inst.DB_MAX_OUTPUT_PORT_TYPE
resetn => inst.ACLR
resetn => inst1.ACLR
clk => inst.CLK
clk => inst1.CLK
step => inst2.IN1
step => inst4.IN1
Q1 <= inst1.DB_MAX_OUTPUT_PORT_TYPE
sel0 <= inst7.DB_MAX_OUTPUT_PORT_TYPE
sel1 <= inst8.DB_MAX_OUTPUT_PORT_TYPE
sel2 <= inst9.DB_MAX_OUTPUT_PORT_TYPE
sel3 <= inst10.DB_MAX_OUTPUT_PORT_TYPE


|harkka2018|rotary_encoder:inst4|constant4:inst14
result[0] <= lpm_constant:LPM_CONSTANT_component.result[0]
result[1] <= lpm_constant:LPM_CONSTANT_component.result[1]
result[2] <= lpm_constant:LPM_CONSTANT_component.result[2]
result[3] <= lpm_constant:LPM_CONSTANT_component.result[3]


|harkka2018|rotary_encoder:inst4|constant4:inst14|lpm_constant:LPM_CONSTANT_component
result[0] <= <GND>
result[1] <= <GND>
result[2] <= <VCC>
result[3] <= <GND>


|harkka2018|rotary_encoder:inst4|updownBCDcounter:inst7
aload => lpm_counter:LPM_COUNTER_component.aload
clock => lpm_counter:LPM_COUNTER_component.clock
cnt_en => lpm_counter:LPM_COUNTER_component.cnt_en
data[0] => lpm_counter:LPM_COUNTER_component.data[0]
data[1] => lpm_counter:LPM_COUNTER_component.data[1]
data[2] => lpm_counter:LPM_COUNTER_component.data[2]
data[3] => lpm_counter:LPM_COUNTER_component.data[3]
updown => lpm_counter:LPM_COUNTER_component.updown
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]
q[3] <= lpm_counter:LPM_COUNTER_component.q[3]


|harkka2018|rotary_encoder:inst4|updownBCDcounter:inst7|lpm_counter:LPM_COUNTER_component
clock => cntr_4bj:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_4bj:auto_generated.cnt_en
updown => cntr_4bj:auto_generated.updown
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => cntr_4bj:auto_generated.aload
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => cntr_4bj:auto_generated.data[0]
data[1] => cntr_4bj:auto_generated.data[1]
data[2] => cntr_4bj:auto_generated.data[2]
data[3] => cntr_4bj:auto_generated.data[3]
cin => ~NO_FANOUT~
q[0] <= cntr_4bj:auto_generated.q[0]
q[1] <= cntr_4bj:auto_generated.q[1]
q[2] <= cntr_4bj:auto_generated.q[2]
q[3] <= cntr_4bj:auto_generated.q[3]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|harkka2018|rotary_encoder:inst4|updownBCDcounter:inst7|lpm_counter:LPM_COUNTER_component|cntr_4bj:auto_generated
aload => aclr_actual.IN1
aload => _.IN0
aload => _.IN0
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cnt_en => _.IN0
data[0] => _.IN1
data[0] => a_data[0].IN1
data[1] => _.IN1
data[1] => a_data[1].IN1
data[2] => _.IN1
data[2] => a_data[2].IN1
data[3] => _.IN1
data[3] => a_data[3].IN1
q[0] <= safe_q[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= safe_q[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= safe_q[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= safe_q[3].DB_MAX_OUTPUT_PORT_TYPE
updown => counter_comb_bita3.IN1
updown => counter_comb_bita2.IN1
updown => counter_comb_bita1.IN1
updown => counter_comb_bita0.IN1
updown => _.IN0
updown => cout_actual.IN1


|harkka2018|rotary_encoder:inst4|updownBCDcounter:inst7|lpm_counter:LPM_COUNTER_component|cntr_4bj:auto_generated|cmpr_8cc:cmpr2
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[0].IN0
dataa[1] => data_wire[0].IN0
dataa[2] => data_wire[1].IN0
dataa[3] => data_wire[1].IN0
datab[0] => data_wire[0].IN1
datab[1] => data_wire[0].IN1
datab[2] => data_wire[1].IN1
datab[3] => data_wire[1].IN1


|harkka2018|rotary_encoder:inst4|constant3:inst13
result[0] <= lpm_constant:LPM_CONSTANT_component.result[0]
result[1] <= lpm_constant:LPM_CONSTANT_component.result[1]
result[2] <= lpm_constant:LPM_CONSTANT_component.result[2]
result[3] <= lpm_constant:LPM_CONSTANT_component.result[3]


|harkka2018|rotary_encoder:inst4|constant3:inst13|lpm_constant:LPM_CONSTANT_component
result[0] <= <VCC>
result[1] <= <VCC>
result[2] <= <GND>
result[3] <= <GND>


|harkka2018|rotary_encoder:inst4|updownBCDcounter:inst8
aload => lpm_counter:LPM_COUNTER_component.aload
clock => lpm_counter:LPM_COUNTER_component.clock
cnt_en => lpm_counter:LPM_COUNTER_component.cnt_en
data[0] => lpm_counter:LPM_COUNTER_component.data[0]
data[1] => lpm_counter:LPM_COUNTER_component.data[1]
data[2] => lpm_counter:LPM_COUNTER_component.data[2]
data[3] => lpm_counter:LPM_COUNTER_component.data[3]
updown => lpm_counter:LPM_COUNTER_component.updown
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]
q[3] <= lpm_counter:LPM_COUNTER_component.q[3]


|harkka2018|rotary_encoder:inst4|updownBCDcounter:inst8|lpm_counter:LPM_COUNTER_component
clock => cntr_4bj:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_4bj:auto_generated.cnt_en
updown => cntr_4bj:auto_generated.updown
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => cntr_4bj:auto_generated.aload
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => cntr_4bj:auto_generated.data[0]
data[1] => cntr_4bj:auto_generated.data[1]
data[2] => cntr_4bj:auto_generated.data[2]
data[3] => cntr_4bj:auto_generated.data[3]
cin => ~NO_FANOUT~
q[0] <= cntr_4bj:auto_generated.q[0]
q[1] <= cntr_4bj:auto_generated.q[1]
q[2] <= cntr_4bj:auto_generated.q[2]
q[3] <= cntr_4bj:auto_generated.q[3]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|harkka2018|rotary_encoder:inst4|updownBCDcounter:inst8|lpm_counter:LPM_COUNTER_component|cntr_4bj:auto_generated
aload => aclr_actual.IN1
aload => _.IN0
aload => _.IN0
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cnt_en => _.IN0
data[0] => _.IN1
data[0] => a_data[0].IN1
data[1] => _.IN1
data[1] => a_data[1].IN1
data[2] => _.IN1
data[2] => a_data[2].IN1
data[3] => _.IN1
data[3] => a_data[3].IN1
q[0] <= safe_q[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= safe_q[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= safe_q[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= safe_q[3].DB_MAX_OUTPUT_PORT_TYPE
updown => counter_comb_bita3.IN1
updown => counter_comb_bita2.IN1
updown => counter_comb_bita1.IN1
updown => counter_comb_bita0.IN1
updown => _.IN0
updown => cout_actual.IN1


|harkka2018|rotary_encoder:inst4|updownBCDcounter:inst8|lpm_counter:LPM_COUNTER_component|cntr_4bj:auto_generated|cmpr_8cc:cmpr2
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[0].IN0
dataa[1] => data_wire[0].IN0
dataa[2] => data_wire[1].IN0
dataa[3] => data_wire[1].IN0
datab[0] => data_wire[0].IN1
datab[1] => data_wire[0].IN1
datab[2] => data_wire[1].IN1
datab[3] => data_wire[1].IN1


|harkka2018|rotary_encoder:inst4|constant2:inst12
result[0] <= lpm_constant:LPM_CONSTANT_component.result[0]
result[1] <= lpm_constant:LPM_CONSTANT_component.result[1]
result[2] <= lpm_constant:LPM_CONSTANT_component.result[2]
result[3] <= lpm_constant:LPM_CONSTANT_component.result[3]


|harkka2018|rotary_encoder:inst4|constant2:inst12|lpm_constant:LPM_CONSTANT_component
result[0] <= <GND>
result[1] <= <VCC>
result[2] <= <GND>
result[3] <= <GND>


|harkka2018|rotary_encoder:inst4|updownBCDcounter:inst9
aload => lpm_counter:LPM_COUNTER_component.aload
clock => lpm_counter:LPM_COUNTER_component.clock
cnt_en => lpm_counter:LPM_COUNTER_component.cnt_en
data[0] => lpm_counter:LPM_COUNTER_component.data[0]
data[1] => lpm_counter:LPM_COUNTER_component.data[1]
data[2] => lpm_counter:LPM_COUNTER_component.data[2]
data[3] => lpm_counter:LPM_COUNTER_component.data[3]
updown => lpm_counter:LPM_COUNTER_component.updown
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]
q[3] <= lpm_counter:LPM_COUNTER_component.q[3]


|harkka2018|rotary_encoder:inst4|updownBCDcounter:inst9|lpm_counter:LPM_COUNTER_component
clock => cntr_4bj:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => cntr_4bj:auto_generated.cnt_en
updown => cntr_4bj:auto_generated.updown
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => cntr_4bj:auto_generated.aload
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => cntr_4bj:auto_generated.data[0]
data[1] => cntr_4bj:auto_generated.data[1]
data[2] => cntr_4bj:auto_generated.data[2]
data[3] => cntr_4bj:auto_generated.data[3]
cin => ~NO_FANOUT~
q[0] <= cntr_4bj:auto_generated.q[0]
q[1] <= cntr_4bj:auto_generated.q[1]
q[2] <= cntr_4bj:auto_generated.q[2]
q[3] <= cntr_4bj:auto_generated.q[3]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|harkka2018|rotary_encoder:inst4|updownBCDcounter:inst9|lpm_counter:LPM_COUNTER_component|cntr_4bj:auto_generated
aload => aclr_actual.IN1
aload => _.IN0
aload => _.IN0
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cnt_en => _.IN0
data[0] => _.IN1
data[0] => a_data[0].IN1
data[1] => _.IN1
data[1] => a_data[1].IN1
data[2] => _.IN1
data[2] => a_data[2].IN1
data[3] => _.IN1
data[3] => a_data[3].IN1
q[0] <= safe_q[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= safe_q[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= safe_q[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= safe_q[3].DB_MAX_OUTPUT_PORT_TYPE
updown => counter_comb_bita3.IN1
updown => counter_comb_bita2.IN1
updown => counter_comb_bita1.IN1
updown => counter_comb_bita0.IN1
updown => _.IN0
updown => cout_actual.IN1


|harkka2018|rotary_encoder:inst4|updownBCDcounter:inst9|lpm_counter:LPM_COUNTER_component|cntr_4bj:auto_generated|cmpr_8cc:cmpr2
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[0].IN0
dataa[1] => data_wire[0].IN0
dataa[2] => data_wire[1].IN0
dataa[3] => data_wire[1].IN0
datab[0] => data_wire[0].IN1
datab[1] => data_wire[0].IN1
datab[2] => data_wire[1].IN1
datab[3] => data_wire[1].IN1


|harkka2018|rotary_encoder:inst4|constant1:inst
result[0] <= lpm_constant:LPM_CONSTANT_component.result[0]
result[1] <= lpm_constant:LPM_CONSTANT_component.result[1]
result[2] <= lpm_constant:LPM_CONSTANT_component.result[2]
result[3] <= lpm_constant:LPM_CONSTANT_component.result[3]


|harkka2018|rotary_encoder:inst4|constant1:inst|lpm_constant:LPM_CONSTANT_component
result[0] <= <VCC>
result[1] <= <GND>
result[2] <= <GND>
result[3] <= <GND>


|harkka2018|input_sync:inst12
sync_rising_edge <= inst3.DB_MAX_OUTPUT_PORT_TYPE
resetn => inst1.ACLR
resetn => inst.ACLR
resetn => inst2.ACLR
clk => inst1.CLK
clk => inst.CLK
clk => inst2.CLK
input => inst.DATAIN


|harkka2018|input_sync:inst10
sync_rising_edge <= inst3.DB_MAX_OUTPUT_PORT_TYPE
resetn => inst1.ACLR
resetn => inst.ACLR
resetn => inst2.ACLR
clk => inst1.CLK
clk => inst.CLK
clk => inst2.CLK
input => inst.DATAIN


|harkka2018|mode_control:inst1
rst3sn <= is_3s:inst5.ctr_3s_srn
button => inst14.IN0
clk => inst6.CLK
clk => timer_8hz:inst1.clk
clk => button_sync:inst.clk
clk => crt5div25:inst4.clk
clk => is_3s:inst5.clk
clk => ctrl_state_machine:inst2.clk
mode <= ctrl_state_machine:inst2.mode
enable_adjust <= ctrl_state_machine:inst2.enable_adjust
s3 <= crt5div25:inst4.tc
BF <= button_sync:inst.bf
state[0] <= ctrl_state_machine:inst2.q[0]
state[1] <= ctrl_state_machine:inst2.q[1]
state[2] <= ctrl_state_machine:inst2.q[2]


|harkka2018|mode_control:inst1|is_3s:inst5
ctr_3s_srn <= inst.DB_MAX_OUTPUT_PORT_TYPE
clk => inst.CLK
br => inst7.IN0
br => inst4.IN1
bf => inst8.IN0
s3 => inst9.IN0


|harkka2018|mode_control:inst1|button_sync:inst
br <= inst4.DB_MAX_OUTPUT_PORT_TYPE
clk => inst1.CLK
clk => inst.CLK
clk => inst2.CLK
button => inst.DATAIN
bf <= inst5.DB_MAX_OUTPUT_PORT_TYPE
b <= inst2.DB_MAX_OUTPUT_PORT_TYPE


|harkka2018|mode_control:inst1|timer_8hz:inst1
hz8 <= ctr4div10:inst7.tc
clk => ctr4div10:inst7.clk
clk => ctr3div5:inst6.clk
clk => ctr3div5:inst1.clk
clk => ctr4div10:inst5.clk
clk => ctr4div10:inst4.clk
clk => ctr4div10:inst3.clk
clk => ctr3div5:inst2.clk
clk => ctr3div5:inst.clk
en => ctr3div5:inst.en
hz2000 <= ctr4div10:inst5.tc


|harkka2018|mode_control:inst1|timer_8hz:inst1|ctr4div10:inst7
tc <= inst16.DB_MAX_OUTPUT_PORT_TYPE
en => inst15.IN0
en => inst4.IN1
en => inst8.IN1
en => inst11.IN2
en => inst14.IN3
q[0] <= inst.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= inst1.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= inst2.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= inst3.DB_MAX_OUTPUT_PORT_TYPE
rn => inst.ACLR
rn => inst1.ACLR
rn => inst2.ACLR
rn => inst3.ACLR
clk => inst.CLK
clk => inst1.CLK
clk => inst2.CLK
clk => inst3.CLK


|harkka2018|mode_control:inst1|timer_8hz:inst1|ctr3div5:inst6
tc <= inst16.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= inst.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= inst1.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= inst2.DB_MAX_OUTPUT_PORT_TYPE
clk => inst.CLK
clk => inst1.CLK
clk => inst2.CLK
en => inst4.IN1
en => inst8.IN1
en => inst11.IN2
en => inst3.IN1


|harkka2018|mode_control:inst1|timer_8hz:inst1|ctr3div5:inst1
tc <= inst16.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= inst.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= inst1.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= inst2.DB_MAX_OUTPUT_PORT_TYPE
clk => inst.CLK
clk => inst1.CLK
clk => inst2.CLK
en => inst4.IN1
en => inst8.IN1
en => inst11.IN2
en => inst3.IN1


|harkka2018|mode_control:inst1|timer_8hz:inst1|ctr4div10:inst5
tc <= inst16.DB_MAX_OUTPUT_PORT_TYPE
en => inst15.IN0
en => inst4.IN1
en => inst8.IN1
en => inst11.IN2
en => inst14.IN3
q[0] <= inst.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= inst1.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= inst2.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= inst3.DB_MAX_OUTPUT_PORT_TYPE
rn => inst.ACLR
rn => inst1.ACLR
rn => inst2.ACLR
rn => inst3.ACLR
clk => inst.CLK
clk => inst1.CLK
clk => inst2.CLK
clk => inst3.CLK


|harkka2018|mode_control:inst1|timer_8hz:inst1|ctr4div10:inst4
tc <= inst16.DB_MAX_OUTPUT_PORT_TYPE
en => inst15.IN0
en => inst4.IN1
en => inst8.IN1
en => inst11.IN2
en => inst14.IN3
q[0] <= inst.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= inst1.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= inst2.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= inst3.DB_MAX_OUTPUT_PORT_TYPE
rn => inst.ACLR
rn => inst1.ACLR
rn => inst2.ACLR
rn => inst3.ACLR
clk => inst.CLK
clk => inst1.CLK
clk => inst2.CLK
clk => inst3.CLK


|harkka2018|mode_control:inst1|timer_8hz:inst1|ctr4div10:inst3
tc <= inst16.DB_MAX_OUTPUT_PORT_TYPE
en => inst15.IN0
en => inst4.IN1
en => inst8.IN1
en => inst11.IN2
en => inst14.IN3
q[0] <= inst.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= inst1.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= inst2.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= inst3.DB_MAX_OUTPUT_PORT_TYPE
rn => inst.ACLR
rn => inst1.ACLR
rn => inst2.ACLR
rn => inst3.ACLR
clk => inst.CLK
clk => inst1.CLK
clk => inst2.CLK
clk => inst3.CLK


|harkka2018|mode_control:inst1|timer_8hz:inst1|ctr3div5:inst2
tc <= inst16.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= inst.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= inst1.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= inst2.DB_MAX_OUTPUT_PORT_TYPE
clk => inst.CLK
clk => inst1.CLK
clk => inst2.CLK
en => inst4.IN1
en => inst8.IN1
en => inst11.IN2
en => inst3.IN1


|harkka2018|mode_control:inst1|timer_8hz:inst1|ctr3div5:inst
tc <= inst16.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= inst.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= inst1.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= inst2.DB_MAX_OUTPUT_PORT_TYPE
clk => inst.CLK
clk => inst1.CLK
clk => inst2.CLK
en => inst4.IN1
en => inst8.IN1
en => inst11.IN2
en => inst3.IN1


|harkka2018|mode_control:inst1|crt5div25:inst4
tc <= inst15.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= inst.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= inst1.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= inst2.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= inst3.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= inst17.DB_MAX_OUTPUT_PORT_TYPE
clk => inst.CLK
clk => inst1.CLK
clk => inst2.CLK
clk => inst3.CLK
clk => inst17.CLK
en => inst4.IN1
en => inst8.IN1
en => inst11.IN2
en => inst14.IN3
en => inst15.IN1
en => inst21.IN3
srn => inst5.IN1
srn => inst7.IN1
srn => inst10.IN1
srn => inst13.IN1
srn => inst19.IN1


|harkka2018|mode_control:inst1|ctrl_state_machine:inst2
mode <= inst9.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= inst14.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= inst5.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= inst.DB_MAX_OUTPUT_PORT_TYPE
clk => inst.CLK
clk => inst5.CLK
clk => inst14.CLK
bf => inst24.IN0
bf => inst4.IN1
bf => inst1.IN0
s3 => inst4.IN0
s3 => lpm_mux1:inst13.data1
s3 => lpm_mux1:inst15.data0
s3 => lpm_mux1:inst16.data4
s3 => inst3.IN0
s3 => inst23.IN0
enable_adjust <= inst12.DB_MAX_OUTPUT_PORT_TYPE


|harkka2018|mode_control:inst1|ctrl_state_machine:inst2|lpm_mux1:inst13
data0 => LPM_MUX:LPM_MUX_component.DATA[0][0]
data1 => LPM_MUX:LPM_MUX_component.DATA[1][0]
data2 => LPM_MUX:LPM_MUX_component.DATA[2][0]
data3 => LPM_MUX:LPM_MUX_component.DATA[3][0]
data4 => LPM_MUX:LPM_MUX_component.DATA[4][0]
data5 => LPM_MUX:LPM_MUX_component.DATA[5][0]
data6 => LPM_MUX:LPM_MUX_component.DATA[6][0]
data7 => LPM_MUX:LPM_MUX_component.DATA[7][0]
sel[0] => LPM_MUX:LPM_MUX_component.SEL[0]
sel[1] => LPM_MUX:LPM_MUX_component.SEL[1]
sel[2] => LPM_MUX:LPM_MUX_component.SEL[2]
result <= LPM_MUX:LPM_MUX_component.RESULT[0]


|harkka2018|mode_control:inst1|ctrl_state_machine:inst2|lpm_mux1:inst13|LPM_MUX:LPM_MUX_component
data[0][0] => mux_83e:auto_generated.data[0]
data[1][0] => mux_83e:auto_generated.data[1]
data[2][0] => mux_83e:auto_generated.data[2]
data[3][0] => mux_83e:auto_generated.data[3]
data[4][0] => mux_83e:auto_generated.data[4]
data[5][0] => mux_83e:auto_generated.data[5]
data[6][0] => mux_83e:auto_generated.data[6]
data[7][0] => mux_83e:auto_generated.data[7]
sel[0] => mux_83e:auto_generated.sel[0]
sel[1] => mux_83e:auto_generated.sel[1]
sel[2] => mux_83e:auto_generated.sel[2]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_83e:auto_generated.result[0]


|harkka2018|mode_control:inst1|ctrl_state_machine:inst2|lpm_mux1:inst13|LPM_MUX:LPM_MUX_component|mux_83e:auto_generated
data[0] => _.IN0
data[0] => _.IN0
data[1] => _.IN0
data[2] => _.IN1
data[2] => _.IN1
data[3] => _.IN0
data[4] => _.IN0
data[4] => _.IN0
data[5] => _.IN0
data[6] => _.IN1
data[6] => _.IN1
data[7] => _.IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[2] => result_node[0].IN0
sel[2] => _.IN0


|harkka2018|mode_control:inst1|ctrl_state_machine:inst2|lpm_mux1:inst15
data0 => LPM_MUX:LPM_MUX_component.DATA[0][0]
data1 => LPM_MUX:LPM_MUX_component.DATA[1][0]
data2 => LPM_MUX:LPM_MUX_component.DATA[2][0]
data3 => LPM_MUX:LPM_MUX_component.DATA[3][0]
data4 => LPM_MUX:LPM_MUX_component.DATA[4][0]
data5 => LPM_MUX:LPM_MUX_component.DATA[5][0]
data6 => LPM_MUX:LPM_MUX_component.DATA[6][0]
data7 => LPM_MUX:LPM_MUX_component.DATA[7][0]
sel[0] => LPM_MUX:LPM_MUX_component.SEL[0]
sel[1] => LPM_MUX:LPM_MUX_component.SEL[1]
sel[2] => LPM_MUX:LPM_MUX_component.SEL[2]
result <= LPM_MUX:LPM_MUX_component.RESULT[0]


|harkka2018|mode_control:inst1|ctrl_state_machine:inst2|lpm_mux1:inst15|LPM_MUX:LPM_MUX_component
data[0][0] => mux_83e:auto_generated.data[0]
data[1][0] => mux_83e:auto_generated.data[1]
data[2][0] => mux_83e:auto_generated.data[2]
data[3][0] => mux_83e:auto_generated.data[3]
data[4][0] => mux_83e:auto_generated.data[4]
data[5][0] => mux_83e:auto_generated.data[5]
data[6][0] => mux_83e:auto_generated.data[6]
data[7][0] => mux_83e:auto_generated.data[7]
sel[0] => mux_83e:auto_generated.sel[0]
sel[1] => mux_83e:auto_generated.sel[1]
sel[2] => mux_83e:auto_generated.sel[2]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_83e:auto_generated.result[0]


|harkka2018|mode_control:inst1|ctrl_state_machine:inst2|lpm_mux1:inst15|LPM_MUX:LPM_MUX_component|mux_83e:auto_generated
data[0] => _.IN0
data[0] => _.IN0
data[1] => _.IN0
data[2] => _.IN1
data[2] => _.IN1
data[3] => _.IN0
data[4] => _.IN0
data[4] => _.IN0
data[5] => _.IN0
data[6] => _.IN1
data[6] => _.IN1
data[7] => _.IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[2] => result_node[0].IN0
sel[2] => _.IN0


|harkka2018|mode_control:inst1|ctrl_state_machine:inst2|lpm_mux1:inst16
data0 => LPM_MUX:LPM_MUX_component.DATA[0][0]
data1 => LPM_MUX:LPM_MUX_component.DATA[1][0]
data2 => LPM_MUX:LPM_MUX_component.DATA[2][0]
data3 => LPM_MUX:LPM_MUX_component.DATA[3][0]
data4 => LPM_MUX:LPM_MUX_component.DATA[4][0]
data5 => LPM_MUX:LPM_MUX_component.DATA[5][0]
data6 => LPM_MUX:LPM_MUX_component.DATA[6][0]
data7 => LPM_MUX:LPM_MUX_component.DATA[7][0]
sel[0] => LPM_MUX:LPM_MUX_component.SEL[0]
sel[1] => LPM_MUX:LPM_MUX_component.SEL[1]
sel[2] => LPM_MUX:LPM_MUX_component.SEL[2]
result <= LPM_MUX:LPM_MUX_component.RESULT[0]


|harkka2018|mode_control:inst1|ctrl_state_machine:inst2|lpm_mux1:inst16|LPM_MUX:LPM_MUX_component
data[0][0] => mux_83e:auto_generated.data[0]
data[1][0] => mux_83e:auto_generated.data[1]
data[2][0] => mux_83e:auto_generated.data[2]
data[3][0] => mux_83e:auto_generated.data[3]
data[4][0] => mux_83e:auto_generated.data[4]
data[5][0] => mux_83e:auto_generated.data[5]
data[6][0] => mux_83e:auto_generated.data[6]
data[7][0] => mux_83e:auto_generated.data[7]
sel[0] => mux_83e:auto_generated.sel[0]
sel[1] => mux_83e:auto_generated.sel[1]
sel[2] => mux_83e:auto_generated.sel[2]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_83e:auto_generated.result[0]


|harkka2018|mode_control:inst1|ctrl_state_machine:inst2|lpm_mux1:inst16|LPM_MUX:LPM_MUX_component|mux_83e:auto_generated
data[0] => _.IN0
data[0] => _.IN0
data[1] => _.IN0
data[2] => _.IN1
data[2] => _.IN1
data[3] => _.IN0
data[4] => _.IN0
data[4] => _.IN0
data[5] => _.IN0
data[6] => _.IN1
data[6] => _.IN1
data[7] => _.IN0
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN1
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[0] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[1] => _.IN0
sel[2] => result_node[0].IN0
sel[2] => _.IN0


|harkka2018|input_sync:inst2
sync_rising_edge <= inst3.DB_MAX_OUTPUT_PORT_TYPE
resetn => inst1.ACLR
resetn => inst.ACLR
resetn => inst2.ACLR
clk => inst1.CLK
clk => inst.CLK
clk => inst2.CLK
input => inst.DATAIN


|harkka2018|lpm_counter1:inst16
clock => lpm_counter:LPM_COUNTER_component.clock
cout <= lpm_counter:LPM_COUNTER_component.cout
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]
q[3] <= lpm_counter:LPM_COUNTER_component.q[3]
q[4] <= lpm_counter:LPM_COUNTER_component.q[4]
q[5] <= lpm_counter:LPM_COUNTER_component.q[5]
q[6] <= lpm_counter:LPM_COUNTER_component.q[6]
q[7] <= lpm_counter:LPM_COUNTER_component.q[7]
q[8] <= lpm_counter:LPM_COUNTER_component.q[8]
q[9] <= lpm_counter:LPM_COUNTER_component.q[9]
q[10] <= lpm_counter:LPM_COUNTER_component.q[10]
q[11] <= lpm_counter:LPM_COUNTER_component.q[11]
q[12] <= lpm_counter:LPM_COUNTER_component.q[12]
q[13] <= lpm_counter:LPM_COUNTER_component.q[13]
q[14] <= lpm_counter:LPM_COUNTER_component.q[14]
q[15] <= lpm_counter:LPM_COUNTER_component.q[15]
q[16] <= lpm_counter:LPM_COUNTER_component.q[16]
q[17] <= lpm_counter:LPM_COUNTER_component.q[17]
q[18] <= lpm_counter:LPM_COUNTER_component.q[18]
q[19] <= lpm_counter:LPM_COUNTER_component.q[19]
q[20] <= lpm_counter:LPM_COUNTER_component.q[20]
q[21] <= lpm_counter:LPM_COUNTER_component.q[21]
q[22] <= lpm_counter:LPM_COUNTER_component.q[22]
q[23] <= lpm_counter:LPM_COUNTER_component.q[23]
q[24] <= lpm_counter:LPM_COUNTER_component.q[24]


|harkka2018|lpm_counter1:inst16|lpm_counter:LPM_COUNTER_component
clock => cntr_pmj:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
data[6] => ~NO_FANOUT~
data[7] => ~NO_FANOUT~
data[8] => ~NO_FANOUT~
data[9] => ~NO_FANOUT~
data[10] => ~NO_FANOUT~
data[11] => ~NO_FANOUT~
data[12] => ~NO_FANOUT~
data[13] => ~NO_FANOUT~
data[14] => ~NO_FANOUT~
data[15] => ~NO_FANOUT~
data[16] => ~NO_FANOUT~
data[17] => ~NO_FANOUT~
data[18] => ~NO_FANOUT~
data[19] => ~NO_FANOUT~
data[20] => ~NO_FANOUT~
data[21] => ~NO_FANOUT~
data[22] => ~NO_FANOUT~
data[23] => ~NO_FANOUT~
data[24] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_pmj:auto_generated.q[0]
q[1] <= cntr_pmj:auto_generated.q[1]
q[2] <= cntr_pmj:auto_generated.q[2]
q[3] <= cntr_pmj:auto_generated.q[3]
q[4] <= cntr_pmj:auto_generated.q[4]
q[5] <= cntr_pmj:auto_generated.q[5]
q[6] <= cntr_pmj:auto_generated.q[6]
q[7] <= cntr_pmj:auto_generated.q[7]
q[8] <= cntr_pmj:auto_generated.q[8]
q[9] <= cntr_pmj:auto_generated.q[9]
q[10] <= cntr_pmj:auto_generated.q[10]
q[11] <= cntr_pmj:auto_generated.q[11]
q[12] <= cntr_pmj:auto_generated.q[12]
q[13] <= cntr_pmj:auto_generated.q[13]
q[14] <= cntr_pmj:auto_generated.q[14]
q[15] <= cntr_pmj:auto_generated.q[15]
q[16] <= cntr_pmj:auto_generated.q[16]
q[17] <= cntr_pmj:auto_generated.q[17]
q[18] <= cntr_pmj:auto_generated.q[18]
q[19] <= cntr_pmj:auto_generated.q[19]
q[20] <= cntr_pmj:auto_generated.q[20]
q[21] <= cntr_pmj:auto_generated.q[21]
q[22] <= cntr_pmj:auto_generated.q[22]
q[23] <= cntr_pmj:auto_generated.q[23]
q[24] <= cntr_pmj:auto_generated.q[24]
cout <= cntr_pmj:auto_generated.cout
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|harkka2018|lpm_counter1:inst16|lpm_counter:LPM_COUNTER_component|cntr_pmj:auto_generated
clock => counter_reg_bit1a[24].CLK
clock => counter_reg_bit1a[23].CLK
clock => counter_reg_bit1a[22].CLK
clock => counter_reg_bit1a[21].CLK
clock => counter_reg_bit1a[20].CLK
clock => counter_reg_bit1a[19].CLK
clock => counter_reg_bit1a[18].CLK
clock => counter_reg_bit1a[17].CLK
clock => counter_reg_bit1a[16].CLK
clock => counter_reg_bit1a[15].CLK
clock => counter_reg_bit1a[14].CLK
clock => counter_reg_bit1a[13].CLK
clock => counter_reg_bit1a[12].CLK
clock => counter_reg_bit1a[11].CLK
clock => counter_reg_bit1a[10].CLK
clock => counter_reg_bit1a[9].CLK
clock => counter_reg_bit1a[8].CLK
clock => counter_reg_bit1a[7].CLK
clock => counter_reg_bit1a[6].CLK
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
cout <= cout_actual.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT
q[6] <= counter_reg_bit1a[6].REGOUT
q[7] <= counter_reg_bit1a[7].REGOUT
q[8] <= counter_reg_bit1a[8].REGOUT
q[9] <= counter_reg_bit1a[9].REGOUT
q[10] <= counter_reg_bit1a[10].REGOUT
q[11] <= counter_reg_bit1a[11].REGOUT
q[12] <= counter_reg_bit1a[12].REGOUT
q[13] <= counter_reg_bit1a[13].REGOUT
q[14] <= counter_reg_bit1a[14].REGOUT
q[15] <= counter_reg_bit1a[15].REGOUT
q[16] <= counter_reg_bit1a[16].REGOUT
q[17] <= counter_reg_bit1a[17].REGOUT
q[18] <= counter_reg_bit1a[18].REGOUT
q[19] <= counter_reg_bit1a[19].REGOUT
q[20] <= counter_reg_bit1a[20].REGOUT
q[21] <= counter_reg_bit1a[21].REGOUT
q[22] <= counter_reg_bit1a[22].REGOUT
q[23] <= counter_reg_bit1a[23].REGOUT
q[24] <= counter_reg_bit1a[24].REGOUT


|harkka2018|lpm_counter1:inst16|lpm_counter:LPM_COUNTER_component|cntr_pmj:auto_generated|cmpr_rdc:cmpr2
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[4].IN0
dataa[1] => data_wire[4].IN0
dataa[2] => data_wire[5].IN0
dataa[3] => data_wire[5].IN0
dataa[4] => data_wire[6].IN0
dataa[5] => data_wire[6].IN0
dataa[6] => data_wire[7].IN0
dataa[7] => data_wire[7].IN0
dataa[8] => data_wire[8].IN0
dataa[9] => data_wire[8].IN0
dataa[10] => data_wire[9].IN0
dataa[11] => data_wire[9].IN0
dataa[12] => data_wire[10].IN0
dataa[13] => data_wire[10].IN0
dataa[14] => data_wire[11].IN0
dataa[15] => data_wire[11].IN0
dataa[16] => data_wire[12].IN0
dataa[17] => data_wire[12].IN0
dataa[18] => data_wire[13].IN0
dataa[19] => data_wire[13].IN0
dataa[20] => data_wire[14].IN0
dataa[21] => data_wire[14].IN0
dataa[22] => data_wire[15].IN0
dataa[23] => data_wire[15].IN0
dataa[24] => data_wire[16].IN0
datab[0] => data_wire[4].IN1
datab[1] => data_wire[4].IN1
datab[2] => data_wire[5].IN1
datab[3] => data_wire[5].IN1
datab[4] => data_wire[6].IN1
datab[5] => data_wire[6].IN1
datab[6] => data_wire[7].IN1
datab[7] => data_wire[7].IN1
datab[8] => data_wire[8].IN1
datab[9] => data_wire[8].IN1
datab[10] => data_wire[9].IN1
datab[11] => data_wire[9].IN1
datab[12] => data_wire[10].IN1
datab[13] => data_wire[10].IN1
datab[14] => data_wire[11].IN1
datab[15] => data_wire[11].IN1
datab[16] => data_wire[12].IN1
datab[17] => data_wire[12].IN1
datab[18] => data_wire[13].IN1
datab[19] => data_wire[13].IN1
datab[20] => data_wire[14].IN1
datab[21] => data_wire[14].IN1
datab[22] => data_wire[15].IN1
datab[23] => data_wire[15].IN1
datab[24] => data_wire[16].IN1


|harkka2018|mux2:inst3
q <= inst2.DB_MAX_OUTPUT_PORT_TYPE
G => inst1.IN0
G => inst3.IN0
d1 => inst1.IN1
d0 => inst.IN1


